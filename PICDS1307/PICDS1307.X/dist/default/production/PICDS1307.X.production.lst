

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Jan 13 11:44:32 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    28  0000                     
    29                           	psect	smallconst
    30  000800                     __psmallconst:
    31                           	opt stack 0
    32  000800  00                 	db	0
    33  000801                     _dpowers:
    34                           	opt stack 0
    35  000801  0001               	dw	1
    36  000803  000A               	dw	10
    37  000805  0064               	dw	100
    38  000807  03E8               	dw	1000
    39  000809  2710               	dw	10000
    40  00080B                     __end_of_dpowers:
    41                           	opt stack 0
    42  0000                     _OSCCON	set	4051
    43  0000                     _PIE1bits	set	3997
    44  0000                     _PIR1bits	set	3998
    45  0000                     _RCSTA1	set	4011
    46  0000                     _RCSTA1bits	set	4011
    47  0000                     _SPBRG1	set	4015
    48  0000                     _SPBRGH1	set	4016
    49  0000                     _SSP1ADD	set	4040
    50  0000                     _SSP1BUF	set	4041
    51  0000                     _SSP1CON1	set	4038
    52  0000                     _SSP1CON1bits	set	4038
    53  0000                     _SSP1CON2	set	4037
    54  0000                     _SSP1CON2bits	set	4037
    55  0000                     _SSP1STAT	set	4039
    56  0000                     _SSP1STATbits	set	4039
    57  0000                     _TXREG1	set	4013
    58  0000                     _TXSTA1	set	4012
    59  0000                     _TXSTA1bits	set	4012
    60  00080B                     __stringdata:
    61                           	opt stack 0
    62  00080B                     STR_2:
    63  00080B  25                 	db	37
    64  00080C  2E                 	db	46
    65  00080D  32                 	db	50	;'2'
    66  00080E  64                 	db	100	;'d'
    67  00080F  2D                 	db	45
    68  000810  25                 	db	37
    69  000811  2E                 	db	46
    70  000812  32                 	db	50	;'2'
    71  000813  64                 	db	100	;'d'
    72  000814  2D                 	db	45
    73  000815  25                 	db	37
    74  000816  64                 	db	100	;'d'
    75  000817  2C                 	db	44
    76  000818  20                 	db	32
    77  000819  25                 	db	37
    78  00081A  2E                 	db	46
    79  00081B  32                 	db	50	;'2'
    80  00081C  64                 	db	100	;'d'
    81  00081D  3A                 	db	58	;':'
    82  00081E  25                 	db	37
    83  00081F  2E                 	db	46
    84  000820  32                 	db	50	;'2'
    85  000821  64                 	db	100	;'d'
    86  000822  3A                 	db	58	;':'
    87  000823  25                 	db	37
    88  000824  2E                 	db	46
    89  000825  32                 	db	50	;'2'
    90  000826  64                 	db	100	;'d'
    91  000827  0D                 	db	13
    92  000828  00                 	db	0
    93  000829                     STR_1:
    94  000829  54                 	db	84	;'T'
    95  00082A  68                 	db	104	;'h'
    96  00082B  65                 	db	101	;'e'
    97  00082C  20                 	db	32
    98  00082D  44                 	db	68	;'D'
    99  00082E  53                 	db	83	;'S'
   100  00082F  31                 	db	49	;'1'
   101  000830  33                 	db	51	;'3'
   102  000831  30                 	db	48	;'0'
   103  000832  37                 	db	55	;'7'
   104  000833  20                 	db	32
   105  000834  70                 	db	112	;'p'
   106  000835  72                 	db	114	;'r'
   107  000836  6F                 	db	111	;'o'
   108  000837  67                 	db	103	;'g'
   109  000838  72                 	db	114	;'r'
   110  000839  61                 	db	97	;'a'
   111  00083A  6D                 	db	109	;'m'
   112  00083B  6D                 	db	109	;'m'
   113  00083C  65                 	db	101	;'e'
   114  00083D  64                 	db	100	;'d'
   115  00083E  20                 	db	32
   116  00083F  3D                 	db	61	;'='
   117  000840  20                 	db	32
   118  000841  25                 	db	37
   119  000842  64                 	db	100	;'d'
   120  000843  0D                 	db	13
   121  000844  0A                 	db	10
   122  000845  00                 	db	0
   123  000846                     __end_of__stringdata:
   124                           	opt stack 0
   125                           
   126                           ; #config settings
   127  000846  00                 	db	0	; dummy byte at the end
   128  0000                     
   129                           	psect	cinit
   130  001528                     __pcinit:
   131                           	opt stack 0
   132  001528                     start_initialization:
   133                           	opt stack 0
   134  001528                     __initialization:
   135                           	opt stack 0
   136                           
   137                           ; Clear objects allocated to COMRAM (1 bytes)
   138  001528  6A3F               	clrf	__pbssCOMRAM& (0+255),c
   139  00152A                     end_of_initialization:
   140                           	opt stack 0
   141  00152A                     __end_of__initialization:
   142                           	opt stack 0
   143  00152A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   144  00152C  6EF8               	movwf	tblptru,c
   145  00152E  0100               	movlb	0
   146  001530  EFB4  F008         	goto	_main	;jump to C main() function
   147                           tblptru	equ	0xFF8
   148                           
   149                           	psect	bssCOMRAM
   150  00003F                     __pbssCOMRAM:
   151                           	opt stack 0
   152  00003F                     _USART1_Status:
   153                           	opt stack 0
   154  00003F                     	ds	1
   155                           tblptru	equ	0xFF8
   156                           
   157                           	psect	cstackCOMRAM
   158  000001                     __pcstackCOMRAM:
   159                           	opt stack 0
   160  000001                     ??_WriteI2C1:
   161  000001                     ??_ReadI2C1:
   162  000001                     ??_isdigit:
   163  000001                     ?___awdiv:
   164                           	opt stack 0
   165  000001                     ?___lwdiv:
   166                           	opt stack 0
   167  000001                     Write1USART@data:
   168                           	opt stack 0
   169  000001                     OpenI2C1@slew:
   170                           	opt stack 0
   171  000001                     Open1USART@spbrg:
   172                           	opt stack 0
   173  000001                     ___awdiv@dividend:
   174                           	opt stack 0
   175  000001                     ___lwdiv@dividend:
   176                           	opt stack 0
   177                           
   178                           ; 2 bytes @ 0x0
   179  000001                     	ds	1
   180  000002                     putch@data:
   181                           	opt stack 0
   182  000002                     OpenI2C1@sync_mode:
   183                           	opt stack 0
   184  000002                     WriteI2C1@data_out:
   185                           	opt stack 0
   186  000002                     _isdigit$1735:
   187                           	opt stack 0
   188                           
   189                           ; 1 bytes @ 0x1
   190  000002                     	ds	1
   191  000003                     ??_Open1USART:
   192  000003                     isdigit@c:
   193                           	opt stack 0
   194  000003                     rtc_get_time@seconds:
   195                           	opt stack 0
   196  000003                     ___awdiv@divisor:
   197                           	opt stack 0
   198  000003                     ___lwdiv@divisor:
   199                           	opt stack 0
   200                           
   201                           ; 2 bytes @ 0x2
   202  000003                     	ds	2
   203  000005                     ___awdiv@counter:
   204                           	opt stack 0
   205  000005                     rtc_get_time@minutes:
   206                           	opt stack 0
   207  000005                     ___lwdiv@quotient:
   208                           	opt stack 0
   209                           
   210                           ; 2 bytes @ 0x4
   211  000005                     	ds	1
   212  000006                     Open1USART@config:
   213                           	opt stack 0
   214  000006                     ___awdiv@sign:
   215                           	opt stack 0
   216                           
   217                           ; 1 bytes @ 0x5
   218  000006                     	ds	1
   219  000007                     configUSART@config:
   220                           	opt stack 0
   221  000007                     ___lwdiv@counter:
   222                           	opt stack 0
   223  000007                     rtc_get_time@hours:
   224                           	opt stack 0
   225  000007                     ___awdiv@quotient:
   226                           	opt stack 0
   227                           
   228                           ; 2 bytes @ 0x6
   229  000007                     	ds	1
   230  000008                     ?___lwmod:
   231                           	opt stack 0
   232  000008                     configUSART@spbrg:
   233                           	opt stack 0
   234  000008                     ___lwmod@dividend:
   235                           	opt stack 0
   236                           
   237                           ; 2 bytes @ 0x7
   238  000008                     	ds	1
   239  000009                     rtc_set_time@seconds:
   240                           	opt stack 0
   241  000009                     rtc_get_time@day:
   242                           	opt stack 0
   243                           
   244                           ; 2 bytes @ 0x8
   245  000009                     	ds	1
   246  00000A                     ___lwmod@divisor:
   247                           	opt stack 0
   248                           
   249                           ; 2 bytes @ 0x9
   250  00000A                     	ds	1
   251  00000B                     rtc_set_time@minutes:
   252                           	opt stack 0
   253  00000B                     rtc_get_time@date:
   254                           	opt stack 0
   255                           
   256                           ; 2 bytes @ 0xA
   257  00000B                     	ds	1
   258  00000C                     ___lwmod@counter:
   259                           	opt stack 0
   260                           
   261                           ; 1 bytes @ 0xB
   262  00000C                     	ds	1
   263  00000D                     rtc_set_time@hours:
   264                           	opt stack 0
   265  00000D                     rtc_get_time@month:
   266                           	opt stack 0
   267                           
   268                           ; 2 bytes @ 0xC
   269  00000D                     	ds	2
   270  00000F                     rtc_set_time@day:
   271                           	opt stack 0
   272  00000F                     rtc_get_time@year:
   273                           	opt stack 0
   274                           
   275                           ; 2 bytes @ 0xE
   276  00000F                     	ds	2
   277  000011                     ??_rtc_get_time:
   278  000011                     rtc_set_time@date:
   279                           	opt stack 0
   280                           
   281                           ; 2 bytes @ 0x10
   282  000011                     	ds	1
   283  000012                     rtc_get_time@temp:
   284                           	opt stack 0
   285                           
   286                           ; 1 bytes @ 0x11
   287  000012                     	ds	1
   288  000013                     rtc_set_time@month:
   289                           	opt stack 0
   290                           
   291                           ; 2 bytes @ 0x12
   292  000013                     	ds	2
   293  000015                     rtc_set_time@year:
   294                           	opt stack 0
   295                           
   296                           ; 2 bytes @ 0x14
   297  000015                     	ds	2
   298  000017                     ??_rtc_set_time:
   299                           
   300                           ; 0 bytes @ 0x16
   301  000017                     	ds	2
   302  000019                     rtc_set_time@temp:
   303                           	opt stack 0
   304                           
   305                           ; 1 bytes @ 0x18
   306  000019                     	ds	1
   307  00001A                     rtc_set_time@temp1:
   308                           	opt stack 0
   309                           
   310                           ; 1 bytes @ 0x19
   311  00001A                     	ds	1
   312  00001B                     ?_printf:
   313                           	opt stack 0
   314  00001B                     printf@f:
   315                           	opt stack 0
   316                           
   317                           ; 2 bytes @ 0x1A
   318  00001B                     	ds	14
   319  000029                     ??_printf:
   320                           
   321                           ; 0 bytes @ 0x28
   322  000029                     	ds	2
   323  00002B                     printf@ap:
   324                           	opt stack 0
   325                           
   326                           ; 2 bytes @ 0x2A
   327  00002B                     	ds	2
   328  00002D                     printf@flag:
   329                           	opt stack 0
   330                           
   331                           ; 1 bytes @ 0x2C
   332  00002D                     	ds	1
   333  00002E                     printf@_val:
   334                           	opt stack 0
   335                           
   336                           ; 5 bytes @ 0x2D
   337  00002E                     	ds	5
   338  000033                     printf@prec:
   339                           	opt stack 0
   340                           
   341                           ; 1 bytes @ 0x32
   342  000033                     	ds	1
   343  000034                     printf@c:
   344                           	opt stack 0
   345                           
   346                           ; 1 bytes @ 0x33
   347  000034                     	ds	1
   348  000035                     ??_main:
   349                           
   350                           ; 0 bytes @ 0x34
   351  000035                     	ds	1
   352  000036                     main@delay:
   353                           	opt stack 0
   354                           
   355                           ; 2 bytes @ 0x35
   356  000036                     	ds	2
   357  000038                     main@day:
   358                           	opt stack 0
   359                           
   360                           ; 1 bytes @ 0x37
   361  000038                     	ds	1
   362  000039                     main@sec:
   363                           	opt stack 0
   364                           
   365                           ; 1 bytes @ 0x38
   366  000039                     	ds	1
   367  00003A                     main@min:
   368                           	opt stack 0
   369                           
   370                           ; 1 bytes @ 0x39
   371  00003A                     	ds	1
   372  00003B                     main@hour:
   373                           	opt stack 0
   374                           
   375                           ; 1 bytes @ 0x3A
   376  00003B                     	ds	1
   377  00003C                     main@date:
   378                           	opt stack 0
   379                           
   380                           ; 1 bytes @ 0x3B
   381  00003C                     	ds	1
   382  00003D                     main@month:
   383                           	opt stack 0
   384                           
   385                           ; 1 bytes @ 0x3C
   386  00003D                     	ds	1
   387  00003E                     main@year:
   388                           	opt stack 0
   389                           
   390                           ; 1 bytes @ 0x3D
   391  00003E                     	ds	1
   392                           tblptru	equ	0xFF8
   393                           
   394 ;;
   395 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   396 ;;
   397 ;; *************** function _main *****************
   398 ;; Defined at:
   399 ;;		line 57 in file "PICDS1307.c"
   400 ;; Parameters:    Size  Location     Type
   401 ;;		None
   402 ;; Auto vars:     Size  Location     Type
   403 ;;  delay           2   53[COMRAM] int 
   404 ;;  year            1   61[COMRAM] unsigned char 
   405 ;;  month           1   60[COMRAM] unsigned char 
   406 ;;  date            1   59[COMRAM] unsigned char 
   407 ;;  hour            1   58[COMRAM] unsigned char 
   408 ;;  min             1   57[COMRAM] unsigned char 
   409 ;;  sec             1   56[COMRAM] unsigned char 
   410 ;;  day             1   55[COMRAM] unsigned char 
   411 ;; Return value:  Size  Location     Type
   412 ;;		None               void
   413 ;; Registers used:
   414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   415 ;; Tracked objects:
   416 ;;		On entry : 0/0
   417 ;;		On exit  : 0/0
   418 ;;		Unchanged: 0/0
   419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   420 ;;      Params:         0       0       0       0       0       0       0       0       0
   421 ;;      Locals:         9       0       0       0       0       0       0       0       0
   422 ;;      Temps:          1       0       0       0       0       0       0       0       0
   423 ;;      Totals:        10       0       0       0       0       0       0       0       0
   424 ;;Total ram usage:       10 bytes
   425 ;; Hardware stack levels required when called:    3
   426 ;; This function calls:
   427 ;;		_configDS1307
   428 ;;		_configOscillator
   429 ;;		_configUSART
   430 ;;		_printf
   431 ;;		_rtc_get_time
   432 ;;		_rtc_set_time
   433 ;; This function is called by:
   434 ;;		Startup code after reset
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           	psect	text0
   439  001168                     __ptext0:
   440                           	opt stack 0
   441  001168                     _main:
   442                           	opt stack 28
   443                           
   444                           ;PICDS1307.c: 60: BYTE sec=0, min=0, hour=12, day=5, date=1, month=1, year=15;
   445                           
   446                           ;incstack = 0
   447  001168  0E00               	movlw	0
   448  00116A  6E39               	movwf	main@sec,c
   449  00116C  0E00               	movlw	0
   450  00116E  6E3A               	movwf	main@min,c
   451  001170  0E0C               	movlw	12
   452  001172  6E3B               	movwf	main@hour,c
   453  001174  0E05               	movlw	5
   454  001176  6E38               	movwf	main@day,c
   455  001178  0E01               	movlw	1
   456  00117A  6E3C               	movwf	main@date,c
   457  00117C  0E01               	movlw	1
   458  00117E  6E3D               	movwf	main@month,c
   459  001180  0E0F               	movlw	15
   460  001182  6E3E               	movwf	main@year,c
   461                           
   462                           ;PICDS1307.c: 62: configOscillator();
   463  001184  EC9A  F00A         	call	_configOscillator	;wreg free
   464                           
   465                           ;PICDS1307.c: 63: configUSART();
   466  001188  EC71  F00A         	call	_configUSART	;wreg free
   467                           
   468                           ;PICDS1307.c: 64: configDS1307();
   469  00118C  EC85  F00A         	call	_configDS1307	;wreg free
   470                           
   471                           ;PICDS1307.c: 67: printf("The DS1307 programmed = %d\r\n",rtc_set_time(&sec,&min,&hour,&
      +                          day,&date,&month,&year));
   472  001190  0E08               	movlw	high STR_1
   473  001192  6E1C               	movwf	printf@f+1,c
   474  001194  0E29               	movlw	low STR_1
   475  001196  6E1B               	movwf	printf@f,c
   476  001198  0E00               	movlw	high main@sec
   477  00119A  6E0A               	movwf	rtc_set_time@seconds+1,c
   478  00119C  0E39               	movlw	low main@sec
   479  00119E  6E09               	movwf	rtc_set_time@seconds,c
   480  0011A0  0E00               	movlw	high main@min
   481  0011A2  6E0C               	movwf	rtc_set_time@minutes+1,c
   482  0011A4  0E3A               	movlw	low main@min
   483  0011A6  6E0B               	movwf	rtc_set_time@minutes,c
   484  0011A8  0E00               	movlw	high main@hour
   485  0011AA  6E0E               	movwf	rtc_set_time@hours+1,c
   486  0011AC  0E3B               	movlw	low main@hour
   487  0011AE  6E0D               	movwf	rtc_set_time@hours,c
   488  0011B0  0E00               	movlw	high main@day
   489  0011B2  6E10               	movwf	rtc_set_time@day+1,c
   490  0011B4  0E38               	movlw	low main@day
   491  0011B6  6E0F               	movwf	rtc_set_time@day,c
   492  0011B8  0E00               	movlw	high main@date
   493  0011BA  6E12               	movwf	rtc_set_time@date+1,c
   494  0011BC  0E3C               	movlw	low main@date
   495  0011BE  6E11               	movwf	rtc_set_time@date,c
   496  0011C0  0E00               	movlw	high main@month
   497  0011C2  6E14               	movwf	rtc_set_time@month+1,c
   498  0011C4  0E3D               	movlw	low main@month
   499  0011C6  6E13               	movwf	rtc_set_time@month,c
   500  0011C8  0E00               	movlw	high main@year
   501  0011CA  6E16               	movwf	rtc_set_time@year+1,c
   502  0011CC  0E3E               	movlw	low main@year
   503  0011CE  6E15               	movwf	rtc_set_time@year,c
   504  0011D0  EC24  F004         	call	_rtc_set_time	;wreg free
   505  0011D4  6E35               	movwf	??_main& (0+255),c
   506  0011D6  5035               	movf	??_main,w,c
   507  0011D8  6E1D               	movwf	?_printf+2,c
   508  0011DA  6A1E               	clrf	?_printf+3,c
   509  0011DC  ECD8  F007         	call	_printf	;wreg free
   510  0011E0                     l1659:
   511                           
   512                           ;PICDS1307.c: 70: {
   513                           ;PICDS1307.c: 72: rtc_get_time(&sec,&min,&hour,&day,&date,&month,&year);
   514  0011E0  0E00               	movlw	high main@sec
   515  0011E2  6E04               	movwf	rtc_get_time@seconds+1,c
   516  0011E4  0E39               	movlw	low main@sec
   517  0011E6  6E03               	movwf	rtc_get_time@seconds,c
   518  0011E8  0E00               	movlw	high main@min
   519  0011EA  6E06               	movwf	rtc_get_time@minutes+1,c
   520  0011EC  0E3A               	movlw	low main@min
   521  0011EE  6E05               	movwf	rtc_get_time@minutes,c
   522  0011F0  0E00               	movlw	high main@hour
   523  0011F2  6E08               	movwf	rtc_get_time@hours+1,c
   524  0011F4  0E3B               	movlw	low main@hour
   525  0011F6  6E07               	movwf	rtc_get_time@hours,c
   526  0011F8  0E00               	movlw	high main@day
   527  0011FA  6E0A               	movwf	rtc_get_time@day+1,c
   528  0011FC  0E38               	movlw	low main@day
   529  0011FE  6E09               	movwf	rtc_get_time@day,c
   530  001200  0E00               	movlw	high main@date
   531  001202  6E0C               	movwf	rtc_get_time@date+1,c
   532  001204  0E3C               	movlw	low main@date
   533  001206  6E0B               	movwf	rtc_get_time@date,c
   534  001208  0E00               	movlw	high main@month
   535  00120A  6E0E               	movwf	rtc_get_time@month+1,c
   536  00120C  0E3D               	movlw	low main@month
   537  00120E  6E0D               	movwf	rtc_get_time@month,c
   538  001210  0E00               	movlw	high main@year
   539  001212  6E10               	movwf	rtc_get_time@year+1,c
   540  001214  0E3E               	movlw	low main@year
   541  001216  6E0F               	movwf	rtc_get_time@year,c
   542  001218  EC42  F006         	call	_rtc_get_time	;wreg free
   543                           
   544                           ;PICDS1307.c: 74: printf("%.2d-%.2d-%d, %.2d:%.2d:%.2d\r", month, date, year, hour, min,
      +                           sec);
   545  00121C  0E08               	movlw	high STR_2
   546  00121E  6E1C               	movwf	printf@f+1,c
   547  001220  0E0B               	movlw	low STR_2
   548  001222  6E1B               	movwf	printf@f,c
   549  001224  C03D  F01D         	movff	main@month,?_printf+2
   550  001228  6A1E               	clrf	?_printf+3,c
   551  00122A  C03C  F01F         	movff	main@date,?_printf+4
   552  00122E  6A20               	clrf	?_printf+5,c
   553  001230  C03E  F021         	movff	main@year,?_printf+6
   554  001234  6A22               	clrf	?_printf+7,c
   555  001236  C03B  F023         	movff	main@hour,?_printf+8
   556  00123A  6A24               	clrf	?_printf+9,c
   557  00123C  C03A  F025         	movff	main@min,?_printf+10
   558  001240  6A26               	clrf	?_printf+11,c
   559  001242  C039  F027         	movff	main@sec,?_printf+12
   560  001246  6A28               	clrf	?_printf+13,c
   561  001248  ECD8  F007         	call	_printf	;wreg free
   562                           
   563                           ;PICDS1307.c: 75: for(int delay = 0; delay < 20; delay++) _delay((unsigned long)((50)*(8
      +                          000000/4000.0)));
   564  00124C  0E00               	movlw	0
   565  00124E  6E37               	movwf	main@delay+1,c
   566  001250  0E00               	movlw	0
   567  001252  6E36               	movwf	main@delay,c
   568  001254  5037               	movf	main@delay+1,w,c
   569  001256  0A80               	xorlw	128
   570  001258  0F80               	addlw	-128
   571  00125A  0E14               	movlw	20
   572  00125C  B4D8               	btfsc	status,2,c
   573  00125E  5C36               	subwf	main@delay,w,c
   574  001260  B0D8               	btfsc	status,0,c
   575  001262  D7BE               	goto	l1659
   576  001264  0E82               	movlw	130
   577  001266  6E35               	movwf	??_main& (0+255),c
   578  001268  0EDE               	movlw	222
   579  00126A                     u1917:
   580  00126A  2EE8               	decfsz	wreg,f,c
   581  00126C  D7FE               	goto	u1917
   582  00126E  2E35               	decfsz	??_main& (0+255),f,c
   583  001270  D7FC               	goto	u1917
   584  001272  4A36               	infsnz	main@delay,f,c
   585  001274  2A37               	incf	main@delay+1,f,c
   586  001276  D7EE               	goto	L1
   587  001278                     __end_of_main:
   588                           	opt stack 0
   589                           tblptru	equ	0xFF8
   590                           wreg	equ	0xFE8
   591                           status	equ	0xFD8
   592                           
   593 ;; *************** function _rtc_set_time *****************
   594 ;; Defined at:
   595 ;;		line 45 in file "DS1307LIB/rtc-ds1307.c"
   596 ;; Parameters:    Size  Location     Type
   597 ;;  seconds         2    8[COMRAM] PTR unsigned char 
   598 ;;		 -> main@sec(1), 
   599 ;;  minutes         2   10[COMRAM] PTR unsigned char 
   600 ;;		 -> main@min(1), 
   601 ;;  hours           2   12[COMRAM] PTR unsigned char 
   602 ;;		 -> main@hour(1), 
   603 ;;  day             2   14[COMRAM] PTR unsigned char 
   604 ;;		 -> main@day(1), 
   605 ;;  date            2   16[COMRAM] PTR unsigned char 
   606 ;;		 -> main@date(1), 
   607 ;;  month           2   18[COMRAM] PTR unsigned char 
   608 ;;		 -> main@month(1), 
   609 ;;  year            2   20[COMRAM] PTR unsigned char 
   610 ;;		 -> main@year(1), 
   611 ;; Auto vars:     Size  Location     Type
   612 ;;  temp1           1   25[COMRAM] unsigned char 
   613 ;;  temp            1   24[COMRAM] unsigned char 
   614 ;; Return value:  Size  Location     Type
   615 ;;                  1    wreg      unsigned char 
   616 ;; Registers used:
   617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   623 ;;      Params:        14       0       0       0       0       0       0       0       0
   624 ;;      Locals:         2       0       0       0       0       0       0       0       0
   625 ;;      Temps:          2       0       0       0       0       0       0       0       0
   626 ;;      Totals:        18       0       0       0       0       0       0       0       0
   627 ;;Total ram usage:       18 bytes
   628 ;; Hardware stack levels used:    1
   629 ;; Hardware stack levels required when called:    1
   630 ;; This function calls:
   631 ;;		_WriteI2C1
   632 ;;		___awdiv
   633 ;; This function is called by:
   634 ;;		_main
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           	psect	text1
   639  000848                     __ptext1:
   640                           	opt stack 0
   641  000848                     _rtc_set_time:
   642                           	opt stack 29
   643  000848                     l1225:
   644  000848  A4C7               	btfss	4039,2,c	;volatile
   645  00084A  D003               	goto	u390
   646  00084C  6A17               	clrf	??_rtc_set_time& (0+255),c
   647  00084E  2A17               	incf	??_rtc_set_time& (0+255),f,c
   648  000850  D001               	goto	u398
   649  000852                     u390:
   650  000852  6A17               	clrf	??_rtc_set_time& (0+255),c
   651  000854                     u398:
   652  000854  50C5               	movf	4037,w,c	;volatile
   653  000856  0B1F               	andlw	31
   654  000858  1017               	iorwf	??_rtc_set_time,w,c
   655  00085A  0900               	iorlw	0
   656  00085C  A4D8               	btfss	status,2,c
   657  00085E  D7F4               	goto	l1225
   658                           
   659                           ;rtc-ds1307.c: 52: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN);
   660  000860  80C5               	bsf	4037,0,c	;volatile
   661  000862                     l59:
   662  000862  B0C5               	btfsc	4037,0,c	;volatile
   663  000864  D7FE               	goto	l59
   664  000866                     l62:
   665  000866  B0C5               	btfsc	4037,0,c	;volatile
   666  000868  D7FE               	goto	l62
   667  00086A                     l1227:
   668  00086A  A4C7               	btfss	4039,2,c	;volatile
   669  00086C  D003               	goto	u430
   670  00086E  6A17               	clrf	??_rtc_set_time& (0+255),c
   671  000870  2A17               	incf	??_rtc_set_time& (0+255),f,c
   672  000872  D001               	goto	u438
   673  000874                     u430:
   674  000874  6A17               	clrf	??_rtc_set_time& (0+255),c
   675  000876                     u438:
   676  000876  50C5               	movf	4037,w,c	;volatile
   677  000878  0B1F               	andlw	31
   678  00087A  1017               	iorwf	??_rtc_set_time,w,c
   679  00087C  0900               	iorlw	0
   680  00087E  A4D8               	btfss	status,2,c
   681  000880  D7F4               	goto	l1227
   682                           
   683                           ;rtc-ds1307.c: 57: WriteI2C1(0xd0 & 0xfe);
   684  000882  0ED0               	movlw	208
   685  000884  EC8E  F009         	call	_WriteI2C1
   686  000888                     l68:
   687  000888  B4C7               	btfsc	4039,2,c	;volatile
   688  00088A  D7FE               	goto	l68
   689                           
   690                           ;rtc-ds1307.c: 60: if (SSP1CON2bits.ACKSTAT)
   691  00088C  BCC5               	btfsc	4037,6,c	;volatile
   692  00088E  D1E7               	goto	l1357
   693  000890                     l1233:
   694  000890  A4C7               	btfss	4039,2,c	;volatile
   695  000892  D003               	goto	u470
   696  000894  6A17               	clrf	??_rtc_set_time& (0+255),c
   697  000896  2A17               	incf	??_rtc_set_time& (0+255),f,c
   698  000898  D001               	goto	u478
   699  00089A                     u470:
   700  00089A  6A17               	clrf	??_rtc_set_time& (0+255),c
   701  00089C                     u478:
   702  00089C  50C5               	movf	4037,w,c	;volatile
   703  00089E  0B1F               	andlw	31
   704  0008A0  1017               	iorwf	??_rtc_set_time,w,c
   705  0008A2  0900               	iorlw	0
   706  0008A4  A4D8               	btfss	status,2,c
   707  0008A6  D7F4               	goto	l1233
   708                           
   709                           ;rtc-ds1307.c: 65: WriteI2C1(0x00);
   710  0008A8  0E00               	movlw	0
   711  0008AA  EC8E  F009         	call	_WriteI2C1
   712  0008AE                     l76:
   713  0008AE  B4C7               	btfsc	4039,2,c	;volatile
   714  0008B0  D7FE               	goto	l76
   715                           
   716                           ;rtc-ds1307.c: 68: if (SSP1CON2bits.ACKSTAT)
   717  0008B2  BCC5               	btfsc	4037,6,c	;volatile
   718  0008B4  D1D4               	goto	l1357
   719                           
   720                           ;rtc-ds1307.c: 72: if (*seconds > 59)
   721                           
   722                           ;rtc-ds1307.c: 69: goto rtc_set_time_fail;
   723  0008B6  C009  FFD9         	movff	rtc_set_time@seconds,fsr2l
   724  0008BA  C00A  FFDA         	movff	rtc_set_time@seconds+1,fsr2h
   725  0008BE  0E3B               	movlw	59
   726  0008C0  64DF               	cpfsgt	indf2,c
   727  0008C2  D001               	goto	l1243
   728  0008C4  D1CC               	goto	l1357
   729  0008C6                     l1243:
   730                           
   731                           ;rtc-ds1307.c: 74: temp1 = (*seconds / 10);
   732  0008C6  C009  FFD9         	movff	rtc_set_time@seconds,fsr2l
   733  0008CA  C00A  FFDA         	movff	rtc_set_time@seconds+1,fsr2h
   734  0008CE  50DF               	movf	indf2,w,c
   735  0008D0  6E17               	movwf	??_rtc_set_time& (0+255),c
   736  0008D2  5017               	movf	??_rtc_set_time,w,c
   737  0008D4  6E01               	movwf	___awdiv@dividend,c
   738  0008D6  6A02               	clrf	___awdiv@dividend+1,c
   739  0008D8  0E00               	movlw	0
   740  0008DA  6E04               	movwf	___awdiv@divisor+1,c
   741  0008DC  0E0A               	movlw	10
   742  0008DE  6E03               	movwf	___awdiv@divisor,c
   743  0008E0  EC3C  F009         	call	___awdiv	;wreg free
   744  0008E4  5001               	movf	?___awdiv,w,c
   745  0008E6  6E1A               	movwf	rtc_set_time@temp1,c
   746                           
   747                           ;rtc-ds1307.c: 75: temp = (*seconds - (temp1 * 10)) + (temp1 << 4);
   748  0008E8  C009  FFD9         	movff	rtc_set_time@seconds,fsr2l
   749  0008EC  C00A  FFDA         	movff	rtc_set_time@seconds+1,fsr2h
   750  0008F0  50DF               	movf	indf2,w,c
   751  0008F2  6E17               	movwf	??_rtc_set_time& (0+255),c
   752  0008F4  501A               	movf	rtc_set_time@temp1,w,c
   753  0008F6  0D0A               	mullw	10
   754  0008F8  50F3               	movf	prodl,w,c
   755  0008FA  0800               	sublw	0
   756  0008FC  6E18               	movwf	(??_rtc_set_time+1)& (0+255),c
   757  0008FE  381A               	swapf	rtc_set_time@temp1,w,c
   758  000900  0BF0               	andlw	240
   759  000902  2418               	addwf	??_rtc_set_time+1,w,c
   760  000904  2417               	addwf	??_rtc_set_time,w,c
   761  000906  6E19               	movwf	rtc_set_time@temp,c
   762                           
   763                           ;rtc-ds1307.c: 76: temp &= 0x7f;
   764  000908  9E19               	bcf	rtc_set_time@temp,7,c
   765  00090A                     l1249:
   766  00090A  A4C7               	btfss	4039,2,c	;volatile
   767  00090C  D003               	goto	u520
   768  00090E  6A17               	clrf	??_rtc_set_time& (0+255),c
   769  000910  2A17               	incf	??_rtc_set_time& (0+255),f,c
   770  000912  D001               	goto	u528
   771  000914                     u520:
   772  000914  6A17               	clrf	??_rtc_set_time& (0+255),c
   773  000916                     u528:
   774  000916  50C5               	movf	4037,w,c	;volatile
   775  000918  0B1F               	andlw	31
   776  00091A  1017               	iorwf	??_rtc_set_time,w,c
   777  00091C  0900               	iorlw	0
   778  00091E  A4D8               	btfss	status,2,c
   779  000920  D7F4               	goto	l1249
   780                           
   781                           ;rtc-ds1307.c: 78: WriteI2C1(temp);
   782  000922  5019               	movf	rtc_set_time@temp,w,c
   783  000924  EC8E  F009         	call	_WriteI2C1
   784  000928                     l84:
   785  000928  B4C7               	btfsc	4039,2,c	;volatile
   786  00092A  D7FE               	goto	l84
   787                           
   788                           ;rtc-ds1307.c: 81: if (SSP1CON2bits.ACKSTAT)
   789  00092C  BCC5               	btfsc	4037,6,c	;volatile
   790  00092E  D197               	goto	l1357
   791                           
   792                           ;rtc-ds1307.c: 85: if (*minutes > 59)
   793                           
   794                           ;rtc-ds1307.c: 82: goto rtc_set_time_fail;
   795  000930  C00B  FFD9         	movff	rtc_set_time@minutes,fsr2l
   796  000934  C00C  FFDA         	movff	rtc_set_time@minutes+1,fsr2h
   797  000938  0E3B               	movlw	59
   798  00093A  64DF               	cpfsgt	indf2,c
   799  00093C  D001               	goto	l1259
   800  00093E  D18F               	goto	l1357
   801  000940                     l1259:
   802                           
   803                           ;rtc-ds1307.c: 88: temp1 = (*minutes / 10);
   804  000940  C00B  FFD9         	movff	rtc_set_time@minutes,fsr2l
   805  000944  C00C  FFDA         	movff	rtc_set_time@minutes+1,fsr2h
   806  000948  50DF               	movf	indf2,w,c
   807  00094A  6E17               	movwf	??_rtc_set_time& (0+255),c
   808  00094C  5017               	movf	??_rtc_set_time,w,c
   809  00094E  6E01               	movwf	___awdiv@dividend,c
   810  000950  6A02               	clrf	___awdiv@dividend+1,c
   811  000952  0E00               	movlw	0
   812  000954  6E04               	movwf	___awdiv@divisor+1,c
   813  000956  0E0A               	movlw	10
   814  000958  6E03               	movwf	___awdiv@divisor,c
   815  00095A  EC3C  F009         	call	___awdiv	;wreg free
   816  00095E  5001               	movf	?___awdiv,w,c
   817  000960  6E1A               	movwf	rtc_set_time@temp1,c
   818                           
   819                           ;rtc-ds1307.c: 89: temp = (*minutes - (temp1 * 10)) + (temp1 << 4);
   820  000962  C00B  FFD9         	movff	rtc_set_time@minutes,fsr2l
   821  000966  C00C  FFDA         	movff	rtc_set_time@minutes+1,fsr2h
   822  00096A  50DF               	movf	indf2,w,c
   823  00096C  6E17               	movwf	??_rtc_set_time& (0+255),c
   824  00096E  501A               	movf	rtc_set_time@temp1,w,c
   825  000970  0D0A               	mullw	10
   826  000972  50F3               	movf	prodl,w,c
   827  000974  0800               	sublw	0
   828  000976  6E18               	movwf	(??_rtc_set_time+1)& (0+255),c
   829  000978  381A               	swapf	rtc_set_time@temp1,w,c
   830  00097A  0BF0               	andlw	240
   831  00097C  2418               	addwf	??_rtc_set_time+1,w,c
   832  00097E  2417               	addwf	??_rtc_set_time,w,c
   833  000980  6E19               	movwf	rtc_set_time@temp,c
   834  000982                     l1263:
   835  000982  A4C7               	btfss	4039,2,c	;volatile
   836  000984  D003               	goto	u570
   837  000986  6A17               	clrf	??_rtc_set_time& (0+255),c
   838  000988  2A17               	incf	??_rtc_set_time& (0+255),f,c
   839  00098A  D001               	goto	u578
   840  00098C                     u570:
   841  00098C  6A17               	clrf	??_rtc_set_time& (0+255),c
   842  00098E                     u578:
   843  00098E  50C5               	movf	4037,w,c	;volatile
   844  000990  0B1F               	andlw	31
   845  000992  1017               	iorwf	??_rtc_set_time,w,c
   846  000994  0900               	iorlw	0
   847  000996  A4D8               	btfss	status,2,c
   848  000998  D7F4               	goto	l1263
   849                           
   850                           ;rtc-ds1307.c: 91: WriteI2C1(temp);
   851  00099A  5019               	movf	rtc_set_time@temp,w,c
   852  00099C  EC8E  F009         	call	_WriteI2C1
   853  0009A0                     l92:
   854  0009A0  B4C7               	btfsc	4039,2,c	;volatile
   855  0009A2  D7FE               	goto	l92
   856                           
   857                           ;rtc-ds1307.c: 94: if (SSP1CON2bits.ACKSTAT)
   858  0009A4  BCC5               	btfsc	4037,6,c	;volatile
   859  0009A6  D15B               	goto	l1357
   860                           
   861                           ;rtc-ds1307.c: 98: if (*hours > 23)
   862                           
   863                           ;rtc-ds1307.c: 95: goto rtc_set_time_fail;
   864  0009A8  C00D  FFD9         	movff	rtc_set_time@hours,fsr2l
   865  0009AC  C00E  FFDA         	movff	rtc_set_time@hours+1,fsr2h
   866  0009B0  0E17               	movlw	23
   867  0009B2  64DF               	cpfsgt	indf2,c
   868  0009B4  D001               	goto	l1273
   869  0009B6  D153               	goto	l1357
   870  0009B8                     l1273:
   871                           
   872                           ;rtc-ds1307.c: 101: temp1 = (*hours / 10);
   873  0009B8  C00D  FFD9         	movff	rtc_set_time@hours,fsr2l
   874  0009BC  C00E  FFDA         	movff	rtc_set_time@hours+1,fsr2h
   875  0009C0  50DF               	movf	indf2,w,c
   876  0009C2  6E17               	movwf	??_rtc_set_time& (0+255),c
   877  0009C4  5017               	movf	??_rtc_set_time,w,c
   878  0009C6  6E01               	movwf	___awdiv@dividend,c
   879  0009C8  6A02               	clrf	___awdiv@dividend+1,c
   880  0009CA  0E00               	movlw	0
   881  0009CC  6E04               	movwf	___awdiv@divisor+1,c
   882  0009CE  0E0A               	movlw	10
   883  0009D0  6E03               	movwf	___awdiv@divisor,c
   884  0009D2  EC3C  F009         	call	___awdiv	;wreg free
   885  0009D6  5001               	movf	?___awdiv,w,c
   886  0009D8  6E1A               	movwf	rtc_set_time@temp1,c
   887                           
   888                           ;rtc-ds1307.c: 102: temp = (*hours - (temp1 * 10)) + (temp1 << 4);
   889  0009DA  C00D  FFD9         	movff	rtc_set_time@hours,fsr2l
   890  0009DE  C00E  FFDA         	movff	rtc_set_time@hours+1,fsr2h
   891  0009E2  50DF               	movf	indf2,w,c
   892  0009E4  6E17               	movwf	??_rtc_set_time& (0+255),c
   893  0009E6  501A               	movf	rtc_set_time@temp1,w,c
   894  0009E8  0D0A               	mullw	10
   895  0009EA  50F3               	movf	prodl,w,c
   896  0009EC  0800               	sublw	0
   897  0009EE  6E18               	movwf	(??_rtc_set_time+1)& (0+255),c
   898  0009F0  381A               	swapf	rtc_set_time@temp1,w,c
   899  0009F2  0BF0               	andlw	240
   900  0009F4  2418               	addwf	??_rtc_set_time+1,w,c
   901  0009F6  2417               	addwf	??_rtc_set_time,w,c
   902  0009F8  6E19               	movwf	rtc_set_time@temp,c
   903                           
   904                           ;rtc-ds1307.c: 103: temp &= 0x3f;
   905  0009FA  0E3F               	movlw	63
   906  0009FC  1619               	andwf	rtc_set_time@temp,f,c
   907  0009FE                     l1279:
   908  0009FE  A4C7               	btfss	4039,2,c	;volatile
   909  000A00  D003               	goto	u620
   910  000A02  6A17               	clrf	??_rtc_set_time& (0+255),c
   911  000A04  2A17               	incf	??_rtc_set_time& (0+255),f,c
   912  000A06  D001               	goto	u628
   913  000A08                     u620:
   914  000A08  6A17               	clrf	??_rtc_set_time& (0+255),c
   915  000A0A                     u628:
   916  000A0A  50C5               	movf	4037,w,c	;volatile
   917  000A0C  0B1F               	andlw	31
   918  000A0E  1017               	iorwf	??_rtc_set_time,w,c
   919  000A10  0900               	iorlw	0
   920  000A12  A4D8               	btfss	status,2,c
   921  000A14  D7F4               	goto	l1279
   922                           
   923                           ;rtc-ds1307.c: 105: WriteI2C1(temp);
   924  000A16  5019               	movf	rtc_set_time@temp,w,c
   925  000A18  EC8E  F009         	call	_WriteI2C1
   926  000A1C                     l100:
   927  000A1C  B4C7               	btfsc	4039,2,c	;volatile
   928  000A1E  D7FE               	goto	l100
   929                           
   930                           ;rtc-ds1307.c: 108: if (SSP1CON2bits.ACKSTAT)
   931  000A20  BCC5               	btfsc	4037,6,c	;volatile
   932  000A22  D11D               	goto	l1357
   933                           
   934                           ;rtc-ds1307.c: 112: if (*day > 7)
   935                           
   936                           ;rtc-ds1307.c: 109: goto rtc_set_time_fail;
   937  000A24  C00F  FFD9         	movff	rtc_set_time@day,fsr2l
   938  000A28  C010  FFDA         	movff	rtc_set_time@day+1,fsr2h
   939  000A2C  0E07               	movlw	7
   940  000A2E  64DF               	cpfsgt	indf2,c
   941  000A30  D001               	goto	l1289
   942  000A32  D115               	goto	l1357
   943  000A34                     l1289:
   944                           
   945                           ;rtc-ds1307.c: 114: if (*day == 0)
   946  000A34  C00F  FFD9         	movff	rtc_set_time@day,fsr2l
   947  000A38  C010  FFDA         	movff	rtc_set_time@day+1,fsr2h
   948  000A3C  50DF               	movf	indf2,w,c
   949  000A3E  B4D8               	btfsc	status,2,c
   950  000A40  D10E               	goto	l1357
   951                           
   952                           ;rtc-ds1307.c: 117: temp1 = (*day / 10);
   953                           
   954                           ;rtc-ds1307.c: 115: goto rtc_set_time_fail;
   955  000A42  C00F  FFD9         	movff	rtc_set_time@day,fsr2l
   956  000A46  C010  FFDA         	movff	rtc_set_time@day+1,fsr2h
   957  000A4A  50DF               	movf	indf2,w,c
   958  000A4C  6E17               	movwf	??_rtc_set_time& (0+255),c
   959  000A4E  5017               	movf	??_rtc_set_time,w,c
   960  000A50  6E01               	movwf	___awdiv@dividend,c
   961  000A52  6A02               	clrf	___awdiv@dividend+1,c
   962  000A54  0E00               	movlw	0
   963  000A56  6E04               	movwf	___awdiv@divisor+1,c
   964  000A58  0E0A               	movlw	10
   965  000A5A  6E03               	movwf	___awdiv@divisor,c
   966  000A5C  EC3C  F009         	call	___awdiv	;wreg free
   967  000A60  5001               	movf	?___awdiv,w,c
   968  000A62  6E1A               	movwf	rtc_set_time@temp1,c
   969                           
   970                           ;rtc-ds1307.c: 118: temp = (*day - (temp1 * 10)) + (temp1 << 4);
   971  000A64  C00F  FFD9         	movff	rtc_set_time@day,fsr2l
   972  000A68  C010  FFDA         	movff	rtc_set_time@day+1,fsr2h
   973  000A6C  50DF               	movf	indf2,w,c
   974  000A6E  6E17               	movwf	??_rtc_set_time& (0+255),c
   975  000A70  501A               	movf	rtc_set_time@temp1,w,c
   976  000A72  0D0A               	mullw	10
   977  000A74  50F3               	movf	prodl,w,c
   978  000A76  0800               	sublw	0
   979  000A78  6E18               	movwf	(??_rtc_set_time+1)& (0+255),c
   980  000A7A  381A               	swapf	rtc_set_time@temp1,w,c
   981  000A7C  0BF0               	andlw	240
   982  000A7E  2418               	addwf	??_rtc_set_time+1,w,c
   983  000A80  2417               	addwf	??_rtc_set_time,w,c
   984  000A82  6E19               	movwf	rtc_set_time@temp,c
   985  000A84                     l1297:
   986  000A84  A4C7               	btfss	4039,2,c	;volatile
   987  000A86  D003               	goto	u680
   988  000A88  6A17               	clrf	??_rtc_set_time& (0+255),c
   989  000A8A  2A17               	incf	??_rtc_set_time& (0+255),f,c
   990  000A8C  D001               	goto	u688
   991  000A8E                     u680:
   992  000A8E  6A17               	clrf	??_rtc_set_time& (0+255),c
   993  000A90                     u688:
   994  000A90  50C5               	movf	4037,w,c	;volatile
   995  000A92  0B1F               	andlw	31
   996  000A94  1017               	iorwf	??_rtc_set_time,w,c
   997  000A96  0900               	iorlw	0
   998  000A98  A4D8               	btfss	status,2,c
   999  000A9A  D7F4               	goto	l1297
  1000                           
  1001                           ;rtc-ds1307.c: 120: WriteI2C1(temp);
  1002  000A9C  5019               	movf	rtc_set_time@temp,w,c
  1003  000A9E  EC8E  F009         	call	_WriteI2C1
  1004  000AA2                     l109:
  1005  000AA2  B4C7               	btfsc	4039,2,c	;volatile
  1006  000AA4  D7FE               	goto	l109
  1007                           
  1008                           ;rtc-ds1307.c: 123: if (SSP1CON2bits.ACKSTAT)
  1009  000AA6  BCC5               	btfsc	4037,6,c	;volatile
  1010  000AA8  D0DA               	goto	l1357
  1011                           
  1012                           ;rtc-ds1307.c: 127: if (*date > 31)
  1013                           
  1014                           ;rtc-ds1307.c: 124: goto rtc_set_time_fail;
  1015  000AAA  C011  FFD9         	movff	rtc_set_time@date,fsr2l
  1016  000AAE  C012  FFDA         	movff	rtc_set_time@date+1,fsr2h
  1017  000AB2  0E1F               	movlw	31
  1018  000AB4  64DF               	cpfsgt	indf2,c
  1019  000AB6  D001               	goto	l1307
  1020  000AB8  D0D2               	goto	l1357
  1021  000ABA                     l1307:
  1022                           
  1023                           ;rtc-ds1307.c: 130: temp1 = (*date / 10);
  1024  000ABA  C011  FFD9         	movff	rtc_set_time@date,fsr2l
  1025  000ABE  C012  FFDA         	movff	rtc_set_time@date+1,fsr2h
  1026  000AC2  50DF               	movf	indf2,w,c
  1027  000AC4  6E17               	movwf	??_rtc_set_time& (0+255),c
  1028  000AC6  5017               	movf	??_rtc_set_time,w,c
  1029  000AC8  6E01               	movwf	___awdiv@dividend,c
  1030  000ACA  6A02               	clrf	___awdiv@dividend+1,c
  1031  000ACC  0E00               	movlw	0
  1032  000ACE  6E04               	movwf	___awdiv@divisor+1,c
  1033  000AD0  0E0A               	movlw	10
  1034  000AD2  6E03               	movwf	___awdiv@divisor,c
  1035  000AD4  EC3C  F009         	call	___awdiv	;wreg free
  1036  000AD8  5001               	movf	?___awdiv,w,c
  1037  000ADA  6E1A               	movwf	rtc_set_time@temp1,c
  1038                           
  1039                           ;rtc-ds1307.c: 131: temp = (*date - (temp1 * 10)) + (temp1 << 4);
  1040  000ADC  C011  FFD9         	movff	rtc_set_time@date,fsr2l
  1041  000AE0  C012  FFDA         	movff	rtc_set_time@date+1,fsr2h
  1042  000AE4  50DF               	movf	indf2,w,c
  1043  000AE6  6E17               	movwf	??_rtc_set_time& (0+255),c
  1044  000AE8  501A               	movf	rtc_set_time@temp1,w,c
  1045  000AEA  0D0A               	mullw	10
  1046  000AEC  50F3               	movf	prodl,w,c
  1047  000AEE  0800               	sublw	0
  1048  000AF0  6E18               	movwf	(??_rtc_set_time+1)& (0+255),c
  1049  000AF2  381A               	swapf	rtc_set_time@temp1,w,c
  1050  000AF4  0BF0               	andlw	240
  1051  000AF6  2418               	addwf	??_rtc_set_time+1,w,c
  1052  000AF8  2417               	addwf	??_rtc_set_time,w,c
  1053  000AFA  6E19               	movwf	rtc_set_time@temp,c
  1054  000AFC                     l1311:
  1055  000AFC  A4C7               	btfss	4039,2,c	;volatile
  1056  000AFE  D003               	goto	u730
  1057  000B00  6A17               	clrf	??_rtc_set_time& (0+255),c
  1058  000B02  2A17               	incf	??_rtc_set_time& (0+255),f,c
  1059  000B04  D001               	goto	u738
  1060  000B06                     u730:
  1061  000B06  6A17               	clrf	??_rtc_set_time& (0+255),c
  1062  000B08                     u738:
  1063  000B08  50C5               	movf	4037,w,c	;volatile
  1064  000B0A  0B1F               	andlw	31
  1065  000B0C  1017               	iorwf	??_rtc_set_time,w,c
  1066  000B0E  0900               	iorlw	0
  1067  000B10  A4D8               	btfss	status,2,c
  1068  000B12  D7F4               	goto	l1311
  1069                           
  1070                           ;rtc-ds1307.c: 133: WriteI2C1(temp);
  1071  000B14  5019               	movf	rtc_set_time@temp,w,c
  1072  000B16  EC8E  F009         	call	_WriteI2C1
  1073  000B1A                     l117:
  1074  000B1A  B4C7               	btfsc	4039,2,c	;volatile
  1075  000B1C  D7FE               	goto	l117
  1076                           
  1077                           ;rtc-ds1307.c: 136: if (SSP1CON2bits.ACKSTAT)
  1078  000B1E  BCC5               	btfsc	4037,6,c	;volatile
  1079  000B20  D09E               	goto	l1357
  1080                           
  1081                           ;rtc-ds1307.c: 140: if (*month > 12)
  1082                           
  1083                           ;rtc-ds1307.c: 137: goto rtc_set_time_fail;
  1084  000B22  C013  FFD9         	movff	rtc_set_time@month,fsr2l
  1085  000B26  C014  FFDA         	movff	rtc_set_time@month+1,fsr2h
  1086  000B2A  0E0C               	movlw	12
  1087  000B2C  64DF               	cpfsgt	indf2,c
  1088  000B2E  D001               	goto	l1321
  1089  000B30  D096               	goto	l1357
  1090  000B32                     l1321:
  1091                           
  1092                           ;rtc-ds1307.c: 143: temp1 = (*month / 10);
  1093  000B32  C013  FFD9         	movff	rtc_set_time@month,fsr2l
  1094  000B36  C014  FFDA         	movff	rtc_set_time@month+1,fsr2h
  1095  000B3A  50DF               	movf	indf2,w,c
  1096  000B3C  6E17               	movwf	??_rtc_set_time& (0+255),c
  1097  000B3E  5017               	movf	??_rtc_set_time,w,c
  1098  000B40  6E01               	movwf	___awdiv@dividend,c
  1099  000B42  6A02               	clrf	___awdiv@dividend+1,c
  1100  000B44  0E00               	movlw	0
  1101  000B46  6E04               	movwf	___awdiv@divisor+1,c
  1102  000B48  0E0A               	movlw	10
  1103  000B4A  6E03               	movwf	___awdiv@divisor,c
  1104  000B4C  EC3C  F009         	call	___awdiv	;wreg free
  1105  000B50  5001               	movf	?___awdiv,w,c
  1106  000B52  6E1A               	movwf	rtc_set_time@temp1,c
  1107                           
  1108                           ;rtc-ds1307.c: 144: temp = (*month - (temp1 * 10)) + (temp1 << 4);
  1109  000B54  C013  FFD9         	movff	rtc_set_time@month,fsr2l
  1110  000B58  C014  FFDA         	movff	rtc_set_time@month+1,fsr2h
  1111  000B5C  50DF               	movf	indf2,w,c
  1112  000B5E  6E17               	movwf	??_rtc_set_time& (0+255),c
  1113  000B60  501A               	movf	rtc_set_time@temp1,w,c
  1114  000B62  0D0A               	mullw	10
  1115  000B64  50F3               	movf	prodl,w,c
  1116  000B66  0800               	sublw	0
  1117  000B68  6E18               	movwf	(??_rtc_set_time+1)& (0+255),c
  1118  000B6A  381A               	swapf	rtc_set_time@temp1,w,c
  1119  000B6C  0BF0               	andlw	240
  1120  000B6E  2418               	addwf	??_rtc_set_time+1,w,c
  1121  000B70  2417               	addwf	??_rtc_set_time,w,c
  1122  000B72  6E19               	movwf	rtc_set_time@temp,c
  1123  000B74                     l1325:
  1124  000B74  A4C7               	btfss	4039,2,c	;volatile
  1125  000B76  D003               	goto	u780
  1126  000B78  6A17               	clrf	??_rtc_set_time& (0+255),c
  1127  000B7A  2A17               	incf	??_rtc_set_time& (0+255),f,c
  1128  000B7C  D001               	goto	u788
  1129  000B7E                     u780:
  1130  000B7E  6A17               	clrf	??_rtc_set_time& (0+255),c
  1131  000B80                     u788:
  1132  000B80  50C5               	movf	4037,w,c	;volatile
  1133  000B82  0B1F               	andlw	31
  1134  000B84  1017               	iorwf	??_rtc_set_time,w,c
  1135  000B86  0900               	iorlw	0
  1136  000B88  A4D8               	btfss	status,2,c
  1137  000B8A  D7F4               	goto	l1325
  1138                           
  1139                           ;rtc-ds1307.c: 146: WriteI2C1(temp);
  1140  000B8C  5019               	movf	rtc_set_time@temp,w,c
  1141  000B8E  EC8E  F009         	call	_WriteI2C1
  1142  000B92                     l125:
  1143  000B92  B4C7               	btfsc	4039,2,c	;volatile
  1144  000B94  D7FE               	goto	l125
  1145                           
  1146                           ;rtc-ds1307.c: 149: if (SSP1CON2bits.ACKSTAT)
  1147  000B96  BCC5               	btfsc	4037,6,c	;volatile
  1148  000B98  D062               	goto	l1357
  1149                           
  1150                           ;rtc-ds1307.c: 153: if (*year > 99)
  1151                           
  1152                           ;rtc-ds1307.c: 150: goto rtc_set_time_fail;
  1153  000B9A  C015  FFD9         	movff	rtc_set_time@year,fsr2l
  1154  000B9E  C016  FFDA         	movff	rtc_set_time@year+1,fsr2h
  1155  000BA2  0E63               	movlw	99
  1156  000BA4  64DF               	cpfsgt	indf2,c
  1157  000BA6  D001               	goto	l1335
  1158  000BA8  D05A               	goto	l1357
  1159  000BAA                     l1335:
  1160                           
  1161                           ;rtc-ds1307.c: 156: temp1 = (*year / 10);
  1162  000BAA  C015  FFD9         	movff	rtc_set_time@year,fsr2l
  1163  000BAE  C016  FFDA         	movff	rtc_set_time@year+1,fsr2h
  1164  000BB2  50DF               	movf	indf2,w,c
  1165  000BB4  6E17               	movwf	??_rtc_set_time& (0+255),c
  1166  000BB6  5017               	movf	??_rtc_set_time,w,c
  1167  000BB8  6E01               	movwf	___awdiv@dividend,c
  1168  000BBA  6A02               	clrf	___awdiv@dividend+1,c
  1169  000BBC  0E00               	movlw	0
  1170  000BBE  6E04               	movwf	___awdiv@divisor+1,c
  1171  000BC0  0E0A               	movlw	10
  1172  000BC2  6E03               	movwf	___awdiv@divisor,c
  1173  000BC4  EC3C  F009         	call	___awdiv	;wreg free
  1174  000BC8  5001               	movf	?___awdiv,w,c
  1175  000BCA  6E1A               	movwf	rtc_set_time@temp1,c
  1176                           
  1177                           ;rtc-ds1307.c: 157: temp = (*year - (temp1 * 10)) + (temp1 << 4);
  1178  000BCC  C015  FFD9         	movff	rtc_set_time@year,fsr2l
  1179  000BD0  C016  FFDA         	movff	rtc_set_time@year+1,fsr2h
  1180  000BD4  50DF               	movf	indf2,w,c
  1181  000BD6  6E17               	movwf	??_rtc_set_time& (0+255),c
  1182  000BD8  501A               	movf	rtc_set_time@temp1,w,c
  1183  000BDA  0D0A               	mullw	10
  1184  000BDC  50F3               	movf	prodl,w,c
  1185  000BDE  0800               	sublw	0
  1186  000BE0  6E18               	movwf	(??_rtc_set_time+1)& (0+255),c
  1187  000BE2  381A               	swapf	rtc_set_time@temp1,w,c
  1188  000BE4  0BF0               	andlw	240
  1189  000BE6  2418               	addwf	??_rtc_set_time+1,w,c
  1190  000BE8  2417               	addwf	??_rtc_set_time,w,c
  1191  000BEA  6E19               	movwf	rtc_set_time@temp,c
  1192  000BEC                     l1339:
  1193  000BEC  A4C7               	btfss	4039,2,c	;volatile
  1194  000BEE  D003               	goto	u830
  1195  000BF0  6A17               	clrf	??_rtc_set_time& (0+255),c
  1196  000BF2  2A17               	incf	??_rtc_set_time& (0+255),f,c
  1197  000BF4  D001               	goto	u838
  1198  000BF6                     u830:
  1199  000BF6  6A17               	clrf	??_rtc_set_time& (0+255),c
  1200  000BF8                     u838:
  1201  000BF8  50C5               	movf	4037,w,c	;volatile
  1202  000BFA  0B1F               	andlw	31
  1203  000BFC  1017               	iorwf	??_rtc_set_time,w,c
  1204  000BFE  0900               	iorlw	0
  1205  000C00  A4D8               	btfss	status,2,c
  1206  000C02  D7F4               	goto	l1339
  1207                           
  1208                           ;rtc-ds1307.c: 159: WriteI2C1(temp);
  1209  000C04  5019               	movf	rtc_set_time@temp,w,c
  1210  000C06  EC8E  F009         	call	_WriteI2C1
  1211  000C0A                     l133:
  1212  000C0A  B4C7               	btfsc	4039,2,c	;volatile
  1213  000C0C  D7FE               	goto	l133
  1214                           
  1215                           ;rtc-ds1307.c: 162: if (SSP1CON2bits.ACKSTAT)
  1216  000C0E  BCC5               	btfsc	4037,6,c	;volatile
  1217  000C10  D026               	goto	l1357
  1218  000C12                     l1345:
  1219  000C12  A4C7               	btfss	4039,2,c	;volatile
  1220  000C14  D003               	goto	u870
  1221  000C16  6A17               	clrf	??_rtc_set_time& (0+255),c
  1222  000C18  2A17               	incf	??_rtc_set_time& (0+255),f,c
  1223  000C1A  D001               	goto	u878
  1224  000C1C                     u870:
  1225  000C1C  6A17               	clrf	??_rtc_set_time& (0+255),c
  1226  000C1E                     u878:
  1227  000C1E  50C5               	movf	4037,w,c	;volatile
  1228  000C20  0B1F               	andlw	31
  1229  000C22  1017               	iorwf	??_rtc_set_time,w,c
  1230  000C24  0900               	iorlw	0
  1231  000C26  A4D8               	btfss	status,2,c
  1232  000C28  D7F4               	goto	l1345
  1233                           
  1234                           ;rtc-ds1307.c: 167: WriteI2C1(0x00);
  1235  000C2A  0E00               	movlw	0
  1236  000C2C  EC8E  F009         	call	_WriteI2C1
  1237  000C30                     l140:
  1238  000C30  B4C7               	btfsc	4039,2,c	;volatile
  1239  000C32  D7FE               	goto	l140
  1240                           
  1241                           ;rtc-ds1307.c: 170: if (SSP1CON2bits.ACKSTAT)
  1242  000C34  BCC5               	btfsc	4037,6,c	;volatile
  1243  000C36  D013               	goto	l1357
  1244  000C38                     l1351:
  1245  000C38  A4C7               	btfss	4039,2,c	;volatile
  1246  000C3A  D003               	goto	u910
  1247  000C3C  6A17               	clrf	??_rtc_set_time& (0+255),c
  1248  000C3E  2A17               	incf	??_rtc_set_time& (0+255),f,c
  1249  000C40  D001               	goto	u918
  1250  000C42                     u910:
  1251  000C42  6A17               	clrf	??_rtc_set_time& (0+255),c
  1252  000C44                     u918:
  1253  000C44  50C5               	movf	4037,w,c	;volatile
  1254  000C46  0B1F               	andlw	31
  1255  000C48  1017               	iorwf	??_rtc_set_time,w,c
  1256  000C4A  0900               	iorlw	0
  1257  000C4C  A4D8               	btfss	status,2,c
  1258  000C4E  D7F4               	goto	l1351
  1259                           
  1260                           ;rtc-ds1307.c: 175: SSP1CON2bits.PEN=1;while(SSP1CON2bits.PEN);
  1261  000C50  84C5               	bsf	4037,2,c	;volatile
  1262  000C52                     l147:
  1263  000C52  B4C5               	btfsc	4037,2,c	;volatile
  1264  000C54  D7FE               	goto	l147
  1265  000C56                     l150:
  1266  000C56  B4C5               	btfsc	4037,2,c	;volatile
  1267  000C58  D7FE               	goto	l150
  1268                           
  1269                           ;rtc-ds1307.c: 179: return (1);
  1270  000C5A  0E01               	movlw	1
  1271  000C5C  0012               	return	
  1272  000C5E                     l1357:
  1273  000C5E  A4C7               	btfss	4039,2,c	;volatile
  1274  000C60  D003               	goto	u950
  1275  000C62  6A17               	clrf	??_rtc_set_time& (0+255),c
  1276  000C64  2A17               	incf	??_rtc_set_time& (0+255),f,c
  1277  000C66  D001               	goto	u958
  1278  000C68                     u950:
  1279  000C68  6A17               	clrf	??_rtc_set_time& (0+255),c
  1280  000C6A                     u958:
  1281  000C6A  50C5               	movf	4037,w,c	;volatile
  1282  000C6C  0B1F               	andlw	31
  1283  000C6E  1017               	iorwf	??_rtc_set_time,w,c
  1284  000C70  0900               	iorlw	0
  1285  000C72  A4D8               	btfss	status,2,c
  1286  000C74  D7F4               	goto	l1357
  1287                           
  1288                           ;rtc-ds1307.c: 186: SSP1CON2bits.PEN=1;while(SSP1CON2bits.PEN);
  1289  000C76  84C5               	bsf	4037,2,c	;volatile
  1290  000C78                     l157:
  1291  000C78  B4C5               	btfsc	4037,2,c	;volatile
  1292  000C7A  D7FE               	goto	l157
  1293  000C7C                     l160:
  1294  000C7C  B4C5               	btfsc	4037,2,c	;volatile
  1295  000C7E  D7FE               	goto	l160
  1296                           
  1297                           ;rtc-ds1307.c: 190: return (0);
  1298  000C80  0E00               	movlw	0
  1299  000C82  0012               	return	
  1300  000C84                     __end_of_rtc_set_time:
  1301                           	opt stack 0
  1302                           tblptru	equ	0xFF8
  1303                           prodl	equ	0xFF3
  1304                           wreg	equ	0xFE8
  1305                           indf2	equ	0xFDF
  1306                           fsr2h	equ	0xFDA
  1307                           fsr2l	equ	0xFD9
  1308                           status	equ	0xFD8
  1309                           
  1310 ;; *************** function ___awdiv *****************
  1311 ;; Defined at:
  1312 ;;		line 8 in file "C:\PROGRAM FILES (X86)\MICROCHIP\XC8\V1.33\sources\common\awdiv.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;  dividend        2    0[COMRAM] int 
  1315 ;;  divisor         2    2[COMRAM] int 
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;  quotient        2    6[COMRAM] int 
  1318 ;;  sign            1    5[COMRAM] unsigned char 
  1319 ;;  counter         1    4[COMRAM] unsigned char 
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  2    0[COMRAM] int 
  1322 ;; Registers used:
  1323 ;;		wreg, status,2, status,0, prodl
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1329 ;;      Params:         4       0       0       0       0       0       0       0       0
  1330 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1331 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1332 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1333 ;;Total ram usage:        8 bytes
  1334 ;; Hardware stack levels used:    1
  1335 ;; This function calls:
  1336 ;;		Nothing
  1337 ;; This function is called by:
  1338 ;;		_rtc_set_time
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text2
  1343  001278                     __ptext2:
  1344                           	opt stack 0
  1345  001278                     ___awdiv:
  1346                           	opt stack 29
  1347                           
  1348                           ;incstack = 0
  1349  001278  0E00               	movlw	0
  1350  00127A  6E06               	movwf	___awdiv@sign,c
  1351  00127C  5004               	movf	___awdiv@divisor+1,w,c
  1352  00127E  0A80               	xorlw	128
  1353  001280  6EF3               	movwf	prodl,c
  1354  001282  0E80               	movlw	128
  1355  001284  5CF3               	subwf	prodl,w,c
  1356  001286  0E00               	movlw	0
  1357  001288  B4D8               	btfsc	status,2,c
  1358  00128A  5C03               	subwf	___awdiv@divisor,w,c
  1359  00128C  B0D8               	btfsc	status,0,c
  1360  00128E  D006               	goto	l1139
  1361  001290  6C03               	negf	___awdiv@divisor,c
  1362  001292  1E04               	comf	___awdiv@divisor+1,f,c
  1363  001294  B0D8               	btfsc	status,0,c
  1364  001296  2A04               	incf	___awdiv@divisor+1,f,c
  1365  001298  0E01               	movlw	1
  1366  00129A  6E06               	movwf	___awdiv@sign,c
  1367  00129C                     l1139:
  1368  00129C  5002               	movf	___awdiv@dividend+1,w,c
  1369  00129E  0A80               	xorlw	128
  1370  0012A0  6EF3               	movwf	prodl,c
  1371  0012A2  0E80               	movlw	128
  1372  0012A4  5CF3               	subwf	prodl,w,c
  1373  0012A6  0E00               	movlw	0
  1374  0012A8  B4D8               	btfsc	status,2,c
  1375  0012AA  5C01               	subwf	___awdiv@dividend,w,c
  1376  0012AC  B0D8               	btfsc	status,0,c
  1377  0012AE  D006               	goto	l1145
  1378  0012B0  6C01               	negf	___awdiv@dividend,c
  1379  0012B2  1E02               	comf	___awdiv@dividend+1,f,c
  1380  0012B4  B0D8               	btfsc	status,0,c
  1381  0012B6  2A02               	incf	___awdiv@dividend+1,f,c
  1382  0012B8  0E01               	movlw	1
  1383  0012BA  1A06               	xorwf	___awdiv@sign,f,c
  1384  0012BC                     l1145:
  1385  0012BC  0E00               	movlw	0
  1386  0012BE  6E08               	movwf	___awdiv@quotient+1,c
  1387  0012C0  0E00               	movlw	0
  1388  0012C2  6E07               	movwf	___awdiv@quotient,c
  1389  0012C4  5004               	movf	___awdiv@divisor+1,w,c
  1390  0012C6  1003               	iorwf	___awdiv@divisor,w,c
  1391  0012C8  B4D8               	btfsc	status,2,c
  1392  0012CA  D01C               	goto	l1167
  1393  0012CC  0E01               	movlw	1
  1394  0012CE  6E05               	movwf	___awdiv@counter,c
  1395  0012D0  D004               	goto	l1153
  1396  0012D2                     l1151:
  1397  0012D2  90D8               	bcf	status,0,c
  1398  0012D4  3603               	rlcf	___awdiv@divisor,f,c
  1399  0012D6  3604               	rlcf	___awdiv@divisor+1,f,c
  1400  0012D8  2A05               	incf	___awdiv@counter,f,c
  1401  0012DA                     l1153:
  1402  0012DA  AE04               	btfss	___awdiv@divisor+1,7,c
  1403  0012DC  D7FA               	goto	l1151
  1404  0012DE                     l1155:
  1405  0012DE  90D8               	bcf	status,0,c
  1406  0012E0  3607               	rlcf	___awdiv@quotient,f,c
  1407  0012E2  3608               	rlcf	___awdiv@quotient+1,f,c
  1408  0012E4  5003               	movf	___awdiv@divisor,w,c
  1409  0012E6  5C01               	subwf	___awdiv@dividend,w,c
  1410  0012E8  5004               	movf	___awdiv@divisor+1,w,c
  1411  0012EA  5802               	subwfb	___awdiv@dividend+1,w,c
  1412  0012EC  A0D8               	btfss	status,0,c
  1413  0012EE  D005               	goto	l1163
  1414  0012F0  5003               	movf	___awdiv@divisor,w,c
  1415  0012F2  5E01               	subwf	___awdiv@dividend,f,c
  1416  0012F4  5004               	movf	___awdiv@divisor+1,w,c
  1417  0012F6  5A02               	subwfb	___awdiv@dividend+1,f,c
  1418  0012F8  8007               	bsf	___awdiv@quotient,0,c
  1419  0012FA                     l1163:
  1420  0012FA  90D8               	bcf	status,0,c
  1421  0012FC  3204               	rrcf	___awdiv@divisor+1,f,c
  1422  0012FE  3203               	rrcf	___awdiv@divisor,f,c
  1423  001300  2E05               	decfsz	___awdiv@counter,f,c
  1424  001302  D7ED               	goto	l1155
  1425  001304                     l1167:
  1426  001304  5006               	movf	___awdiv@sign,w,c
  1427  001306  B4D8               	btfsc	status,2,c
  1428  001308  D004               	goto	l1171
  1429  00130A  6C07               	negf	___awdiv@quotient,c
  1430  00130C  1E08               	comf	___awdiv@quotient+1,f,c
  1431  00130E  B0D8               	btfsc	status,0,c
  1432  001310  2A08               	incf	___awdiv@quotient+1,f,c
  1433  001312                     l1171:
  1434  001312  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1435  001316  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1436  00131A  0012               	return	
  1437  00131C                     __end_of___awdiv:
  1438                           	opt stack 0
  1439                           tblptru	equ	0xFF8
  1440                           prodl	equ	0xFF3
  1441                           wreg	equ	0xFE8
  1442                           indf2	equ	0xFDF
  1443                           fsr2h	equ	0xFDA
  1444                           fsr2l	equ	0xFD9
  1445                           status	equ	0xFD8
  1446                           
  1447 ;; *************** function _rtc_get_time *****************
  1448 ;; Defined at:
  1449 ;;		line 206 in file "DS1307LIB/rtc-ds1307.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;  seconds         2    2[COMRAM] PTR unsigned char 
  1452 ;;		 -> main@sec(1), 
  1453 ;;  minutes         2    4[COMRAM] PTR unsigned char 
  1454 ;;		 -> main@min(1), 
  1455 ;;  hours           2    6[COMRAM] PTR unsigned char 
  1456 ;;		 -> main@hour(1), 
  1457 ;;  day             2    8[COMRAM] PTR unsigned char 
  1458 ;;		 -> main@day(1), 
  1459 ;;  date            2   10[COMRAM] PTR unsigned char 
  1460 ;;		 -> main@date(1), 
  1461 ;;  month           2   12[COMRAM] PTR unsigned char 
  1462 ;;		 -> main@month(1), 
  1463 ;;  year            2   14[COMRAM] PTR unsigned char 
  1464 ;;		 -> main@year(1), 
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;  temp            1   17[COMRAM] unsigned char 
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  1    wreg      unsigned char 
  1469 ;; Registers used:
  1470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1476 ;;      Params:        14       0       0       0       0       0       0       0       0
  1477 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1478 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1479 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1480 ;;Total ram usage:       16 bytes
  1481 ;; Hardware stack levels used:    1
  1482 ;; Hardware stack levels required when called:    1
  1483 ;; This function calls:
  1484 ;;		_ReadI2C1
  1485 ;;		_WriteI2C1
  1486 ;; This function is called by:
  1487 ;;		_main
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           	psect	text3
  1492  000C84                     __ptext3:
  1493                           	opt stack 0
  1494  000C84                     _rtc_get_time:
  1495                           	opt stack 29
  1496  000C84                     l1441:
  1497  000C84  A4C7               	btfss	4039,2,c	;volatile
  1498  000C86  D003               	goto	u1130
  1499  000C88  6A11               	clrf	??_rtc_get_time& (0+255),c
  1500  000C8A  2A11               	incf	??_rtc_get_time& (0+255),f,c
  1501  000C8C  D001               	goto	u1138
  1502  000C8E                     u1130:
  1503  000C8E  6A11               	clrf	??_rtc_get_time& (0+255),c
  1504  000C90                     u1138:
  1505  000C90  50C5               	movf	4037,w,c	;volatile
  1506  000C92  0B1F               	andlw	31
  1507  000C94  1011               	iorwf	??_rtc_get_time,w,c
  1508  000C96  0900               	iorlw	0
  1509  000C98  A4D8               	btfss	status,2,c
  1510  000C9A  D7F4               	goto	l1441
  1511                           
  1512                           ;rtc-ds1307.c: 214: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN);
  1513  000C9C  80C5               	bsf	4037,0,c	;volatile
  1514  000C9E                     l168:
  1515  000C9E  B0C5               	btfsc	4037,0,c	;volatile
  1516  000CA0  D7FE               	goto	l168
  1517  000CA2                     l171:
  1518  000CA2  B0C5               	btfsc	4037,0,c	;volatile
  1519  000CA4  D7FE               	goto	l171
  1520  000CA6                     l1443:
  1521  000CA6  A4C7               	btfss	4039,2,c	;volatile
  1522  000CA8  D003               	goto	u1170
  1523  000CAA  6A11               	clrf	??_rtc_get_time& (0+255),c
  1524  000CAC  2A11               	incf	??_rtc_get_time& (0+255),f,c
  1525  000CAE  D001               	goto	u1178
  1526  000CB0                     u1170:
  1527  000CB0  6A11               	clrf	??_rtc_get_time& (0+255),c
  1528  000CB2                     u1178:
  1529  000CB2  50C5               	movf	4037,w,c	;volatile
  1530  000CB4  0B1F               	andlw	31
  1531  000CB6  1011               	iorwf	??_rtc_get_time,w,c
  1532  000CB8  0900               	iorlw	0
  1533  000CBA  A4D8               	btfss	status,2,c
  1534  000CBC  D7F4               	goto	l1443
  1535                           
  1536                           ;rtc-ds1307.c: 220: WriteI2C1(0xd0 & 0xfe);
  1537  000CBE  0ED0               	movlw	208
  1538  000CC0  EC8E  F009         	call	_WriteI2C1
  1539  000CC4                     l177:
  1540  000CC4  B4C7               	btfsc	4039,2,c	;volatile
  1541  000CC6  D7FE               	goto	l177
  1542                           
  1543                           ;rtc-ds1307.c: 223: if (SSP1CON2bits.ACKSTAT)
  1544  000CC8  BCC5               	btfsc	4037,6,c	;volatile
  1545  000CCA  D136               	goto	l1533
  1546  000CCC                     l1449:
  1547  000CCC  A4C7               	btfss	4039,2,c	;volatile
  1548  000CCE  D003               	goto	u1210
  1549  000CD0  6A11               	clrf	??_rtc_get_time& (0+255),c
  1550  000CD2  2A11               	incf	??_rtc_get_time& (0+255),f,c
  1551  000CD4  D001               	goto	u1218
  1552  000CD6                     u1210:
  1553  000CD6  6A11               	clrf	??_rtc_get_time& (0+255),c
  1554  000CD8                     u1218:
  1555  000CD8  50C5               	movf	4037,w,c	;volatile
  1556  000CDA  0B1F               	andlw	31
  1557  000CDC  1011               	iorwf	??_rtc_get_time,w,c
  1558  000CDE  0900               	iorlw	0
  1559  000CE0  A4D8               	btfss	status,2,c
  1560  000CE2  D7F4               	goto	l1449
  1561                           
  1562                           ;rtc-ds1307.c: 228: WriteI2C1(0x00);
  1563  000CE4  0E00               	movlw	0
  1564  000CE6  EC8E  F009         	call	_WriteI2C1
  1565  000CEA                     l185:
  1566  000CEA  B4C7               	btfsc	4039,2,c	;volatile
  1567  000CEC  D7FE               	goto	l185
  1568                           
  1569                           ;rtc-ds1307.c: 231: if (SSP1CON2bits.ACKSTAT)
  1570  000CEE  BCC5               	btfsc	4037,6,c	;volatile
  1571  000CF0  D123               	goto	l1533
  1572  000CF2                     l1455:
  1573  000CF2  A4C7               	btfss	4039,2,c	;volatile
  1574  000CF4  D003               	goto	u1250
  1575  000CF6  6A11               	clrf	??_rtc_get_time& (0+255),c
  1576  000CF8  2A11               	incf	??_rtc_get_time& (0+255),f,c
  1577  000CFA  D001               	goto	u1258
  1578  000CFC                     u1250:
  1579  000CFC  6A11               	clrf	??_rtc_get_time& (0+255),c
  1580  000CFE                     u1258:
  1581  000CFE  50C5               	movf	4037,w,c	;volatile
  1582  000D00  0B1F               	andlw	31
  1583  000D02  1011               	iorwf	??_rtc_get_time,w,c
  1584  000D04  0900               	iorlw	0
  1585  000D06  A4D8               	btfss	status,2,c
  1586  000D08  D7F4               	goto	l1455
  1587                           
  1588                           ;rtc-ds1307.c: 236: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN);
  1589  000D0A  82C5               	bsf	4037,1,c	;volatile
  1590  000D0C                     l192:
  1591  000D0C  B2C5               	btfsc	4037,1,c	;volatile
  1592  000D0E  D7FE               	goto	l192
  1593  000D10                     l195:
  1594  000D10  B2C5               	btfsc	4037,1,c	;volatile
  1595  000D12  D7FE               	goto	l195
  1596  000D14                     l1457:
  1597  000D14  A4C7               	btfss	4039,2,c	;volatile
  1598  000D16  D003               	goto	u1290
  1599  000D18  6A11               	clrf	??_rtc_get_time& (0+255),c
  1600  000D1A  2A11               	incf	??_rtc_get_time& (0+255),f,c
  1601  000D1C  D001               	goto	u1298
  1602  000D1E                     u1290:
  1603  000D1E  6A11               	clrf	??_rtc_get_time& (0+255),c
  1604  000D20                     u1298:
  1605  000D20  50C5               	movf	4037,w,c	;volatile
  1606  000D22  0B1F               	andlw	31
  1607  000D24  1011               	iorwf	??_rtc_get_time,w,c
  1608  000D26  0900               	iorlw	0
  1609  000D28  A4D8               	btfss	status,2,c
  1610  000D2A  D7F4               	goto	l1457
  1611                           
  1612                           ;rtc-ds1307.c: 242: WriteI2C1(0xd0 | 0x01);
  1613  000D2C  0ED1               	movlw	209
  1614  000D2E  EC8E  F009         	call	_WriteI2C1
  1615  000D32                     l201:
  1616  000D32  B4C7               	btfsc	4039,2,c	;volatile
  1617  000D34  D7FE               	goto	l201
  1618                           
  1619                           ;rtc-ds1307.c: 245: if (SSP1CON2bits.ACKSTAT)
  1620  000D36  BCC5               	btfsc	4037,6,c	;volatile
  1621  000D38  D0FF               	goto	l1533
  1622  000D3A                     l1463:
  1623  000D3A  A4C7               	btfss	4039,2,c	;volatile
  1624  000D3C  D003               	goto	u1330
  1625  000D3E  6A11               	clrf	??_rtc_get_time& (0+255),c
  1626  000D40  2A11               	incf	??_rtc_get_time& (0+255),f,c
  1627  000D42  D001               	goto	u1338
  1628  000D44                     u1330:
  1629  000D44  6A11               	clrf	??_rtc_get_time& (0+255),c
  1630  000D46                     u1338:
  1631  000D46  50C5               	movf	4037,w,c	;volatile
  1632  000D48  0B1F               	andlw	31
  1633  000D4A  1011               	iorwf	??_rtc_get_time,w,c
  1634  000D4C  0900               	iorlw	0
  1635  000D4E  A4D8               	btfss	status,2,c
  1636  000D50  D7F4               	goto	l1463
  1637                           
  1638                           ;rtc-ds1307.c: 253: temp = ReadI2C1();
  1639  000D52  EC40  F00A         	call	_ReadI2C1	;wreg free
  1640  000D56  6E12               	movwf	rtc_get_time@temp,c
  1641                           
  1642                           ;rtc-ds1307.c: 254: *seconds = (temp & 0x0f) + (((temp & 0x70) >> 4) * 10);
  1643  000D58  3812               	swapf	rtc_get_time@temp,w,c
  1644  000D5A  0B0F               	andlw	15
  1645  000D5C  0B07               	andlw	7
  1646  000D5E  0D0A               	mullw	10
  1647  000D60  5012               	movf	rtc_get_time@temp,w,c
  1648  000D62  0B0F               	andlw	15
  1649  000D64  24F3               	addwf	prodl,w,c
  1650  000D66  C003  FFD9         	movff	rtc_get_time@seconds,fsr2l
  1651  000D6A  C004  FFDA         	movff	rtc_get_time@seconds+1,fsr2h
  1652  000D6E  6EDF               	movwf	indf2,c
  1653                           
  1654                           ;rtc-ds1307.c: 255: SSP1CON2bits.ACKDT=0, SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN)
      +                          ;
  1655  000D70  9AC5               	bcf	4037,5,c	;volatile
  1656  000D72  88C5               	bsf	4037,4,c	;volatile
  1657  000D74                     l208:
  1658  000D74  B8C5               	btfsc	4037,4,c	;volatile
  1659  000D76  D7FE               	goto	l208
  1660  000D78                     l211:
  1661  000D78  B8C5               	btfsc	4037,4,c	;volatile
  1662  000D7A  D7FE               	goto	l211
  1663  000D7C                     l1473:
  1664  000D7C  A4C7               	btfss	4039,2,c	;volatile
  1665  000D7E  D003               	goto	u1370
  1666  000D80  6A11               	clrf	??_rtc_get_time& (0+255),c
  1667  000D82  2A11               	incf	??_rtc_get_time& (0+255),f,c
  1668  000D84  D001               	goto	u1378
  1669  000D86                     u1370:
  1670  000D86  6A11               	clrf	??_rtc_get_time& (0+255),c
  1671  000D88                     u1378:
  1672  000D88  50C5               	movf	4037,w,c	;volatile
  1673  000D8A  0B1F               	andlw	31
  1674  000D8C  1011               	iorwf	??_rtc_get_time,w,c
  1675  000D8E  0900               	iorlw	0
  1676  000D90  A4D8               	btfss	status,2,c
  1677  000D92  D7F4               	goto	l1473
  1678                           
  1679                           ;rtc-ds1307.c: 264: temp = ReadI2C1();
  1680  000D94  EC40  F00A         	call	_ReadI2C1	;wreg free
  1681  000D98  6E12               	movwf	rtc_get_time@temp,c
  1682                           
  1683                           ;rtc-ds1307.c: 265: *minutes = (temp & 0x0f) + (((temp & 0x70) >> 4) * 10);
  1684  000D9A  3812               	swapf	rtc_get_time@temp,w,c
  1685  000D9C  0B0F               	andlw	15
  1686  000D9E  0B07               	andlw	7
  1687  000DA0  0D0A               	mullw	10
  1688  000DA2  5012               	movf	rtc_get_time@temp,w,c
  1689  000DA4  0B0F               	andlw	15
  1690  000DA6  24F3               	addwf	prodl,w,c
  1691  000DA8  C005  FFD9         	movff	rtc_get_time@minutes,fsr2l
  1692  000DAC  C006  FFDA         	movff	rtc_get_time@minutes+1,fsr2h
  1693  000DB0  6EDF               	movwf	indf2,c
  1694                           
  1695                           ;rtc-ds1307.c: 266: SSP1CON2bits.ACKDT=0, SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN)
      +                          ;
  1696  000DB2  9AC5               	bcf	4037,5,c	;volatile
  1697  000DB4  88C5               	bsf	4037,4,c	;volatile
  1698  000DB6                     l217:
  1699  000DB6  B8C5               	btfsc	4037,4,c	;volatile
  1700  000DB8  D7FE               	goto	l217
  1701  000DBA                     l220:
  1702  000DBA  B8C5               	btfsc	4037,4,c	;volatile
  1703  000DBC  D7FE               	goto	l220
  1704  000DBE                     l1483:
  1705  000DBE  A4C7               	btfss	4039,2,c	;volatile
  1706  000DC0  D003               	goto	u1410
  1707  000DC2  6A11               	clrf	??_rtc_get_time& (0+255),c
  1708  000DC4  2A11               	incf	??_rtc_get_time& (0+255),f,c
  1709  000DC6  D001               	goto	u1418
  1710  000DC8                     u1410:
  1711  000DC8  6A11               	clrf	??_rtc_get_time& (0+255),c
  1712  000DCA                     u1418:
  1713  000DCA  50C5               	movf	4037,w,c	;volatile
  1714  000DCC  0B1F               	andlw	31
  1715  000DCE  1011               	iorwf	??_rtc_get_time,w,c
  1716  000DD0  0900               	iorlw	0
  1717  000DD2  A4D8               	btfss	status,2,c
  1718  000DD4  D7F4               	goto	l1483
  1719                           
  1720                           ;rtc-ds1307.c: 275: temp = ReadI2C1();
  1721  000DD6  EC40  F00A         	call	_ReadI2C1	;wreg free
  1722  000DDA  6E12               	movwf	rtc_get_time@temp,c
  1723                           
  1724                           ;rtc-ds1307.c: 276: *hours = (temp & 0x0f) + (((temp & 0x30) >> 4) * 10);
  1725  000DDC  3812               	swapf	rtc_get_time@temp,w,c
  1726  000DDE  0B0F               	andlw	15
  1727  000DE0  0B03               	andlw	3
  1728  000DE2  0D0A               	mullw	10
  1729  000DE4  5012               	movf	rtc_get_time@temp,w,c
  1730  000DE6  0B0F               	andlw	15
  1731  000DE8  24F3               	addwf	prodl,w,c
  1732  000DEA  C007  FFD9         	movff	rtc_get_time@hours,fsr2l
  1733  000DEE  C008  FFDA         	movff	rtc_get_time@hours+1,fsr2h
  1734  000DF2  6EDF               	movwf	indf2,c
  1735                           
  1736                           ;rtc-ds1307.c: 277: SSP1CON2bits.ACKDT=0, SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN)
      +                          ;
  1737  000DF4  9AC5               	bcf	4037,5,c	;volatile
  1738  000DF6  88C5               	bsf	4037,4,c	;volatile
  1739  000DF8                     l226:
  1740  000DF8  B8C5               	btfsc	4037,4,c	;volatile
  1741  000DFA  D7FE               	goto	l226
  1742  000DFC                     l229:
  1743  000DFC  B8C5               	btfsc	4037,4,c	;volatile
  1744  000DFE  D7FE               	goto	l229
  1745  000E00                     l1493:
  1746  000E00  A4C7               	btfss	4039,2,c	;volatile
  1747  000E02  D003               	goto	u1450
  1748  000E04  6A11               	clrf	??_rtc_get_time& (0+255),c
  1749  000E06  2A11               	incf	??_rtc_get_time& (0+255),f,c
  1750  000E08  D001               	goto	u1458
  1751  000E0A                     u1450:
  1752  000E0A  6A11               	clrf	??_rtc_get_time& (0+255),c
  1753  000E0C                     u1458:
  1754  000E0C  50C5               	movf	4037,w,c	;volatile
  1755  000E0E  0B1F               	andlw	31
  1756  000E10  1011               	iorwf	??_rtc_get_time,w,c
  1757  000E12  0900               	iorlw	0
  1758  000E14  A4D8               	btfss	status,2,c
  1759  000E16  D7F4               	goto	l1493
  1760                           
  1761                           ;rtc-ds1307.c: 286: temp = ReadI2C1();
  1762  000E18  EC40  F00A         	call	_ReadI2C1	;wreg free
  1763  000E1C  6E12               	movwf	rtc_get_time@temp,c
  1764                           
  1765                           ;rtc-ds1307.c: 287: *day = (temp & 0x07);
  1766  000E1E  5012               	movf	rtc_get_time@temp,w,c
  1767  000E20  0B07               	andlw	7
  1768  000E22  C009  FFD9         	movff	rtc_get_time@day,fsr2l
  1769  000E26  C00A  FFDA         	movff	rtc_get_time@day+1,fsr2h
  1770  000E2A  6EDF               	movwf	indf2,c
  1771                           
  1772                           ;rtc-ds1307.c: 288: SSP1CON2bits.ACKDT=0, SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN)
      +                          ;
  1773  000E2C  9AC5               	bcf	4037,5,c	;volatile
  1774  000E2E  88C5               	bsf	4037,4,c	;volatile
  1775  000E30                     l235:
  1776  000E30  B8C5               	btfsc	4037,4,c	;volatile
  1777  000E32  D7FE               	goto	l235
  1778  000E34                     l238:
  1779  000E34  B8C5               	btfsc	4037,4,c	;volatile
  1780  000E36  D7FE               	goto	l238
  1781  000E38                     l1503:
  1782  000E38  A4C7               	btfss	4039,2,c	;volatile
  1783  000E3A  D003               	goto	u1490
  1784  000E3C  6A11               	clrf	??_rtc_get_time& (0+255),c
  1785  000E3E  2A11               	incf	??_rtc_get_time& (0+255),f,c
  1786  000E40  D001               	goto	u1498
  1787  000E42                     u1490:
  1788  000E42  6A11               	clrf	??_rtc_get_time& (0+255),c
  1789  000E44                     u1498:
  1790  000E44  50C5               	movf	4037,w,c	;volatile
  1791  000E46  0B1F               	andlw	31
  1792  000E48  1011               	iorwf	??_rtc_get_time,w,c
  1793  000E4A  0900               	iorlw	0
  1794  000E4C  A4D8               	btfss	status,2,c
  1795  000E4E  D7F4               	goto	l1503
  1796                           
  1797                           ;rtc-ds1307.c: 297: temp = ReadI2C1();
  1798  000E50  EC40  F00A         	call	_ReadI2C1	;wreg free
  1799  000E54  6E12               	movwf	rtc_get_time@temp,c
  1800                           
  1801                           ;rtc-ds1307.c: 298: *date = (temp & 0x0f) + (((temp & 0x30) >> 4) * 10);
  1802  000E56  3812               	swapf	rtc_get_time@temp,w,c
  1803  000E58  0B0F               	andlw	15
  1804  000E5A  0B03               	andlw	3
  1805  000E5C  0D0A               	mullw	10
  1806  000E5E  5012               	movf	rtc_get_time@temp,w,c
  1807  000E60  0B0F               	andlw	15
  1808  000E62  24F3               	addwf	prodl,w,c
  1809  000E64  C00B  FFD9         	movff	rtc_get_time@date,fsr2l
  1810  000E68  C00C  FFDA         	movff	rtc_get_time@date+1,fsr2h
  1811  000E6C  6EDF               	movwf	indf2,c
  1812                           
  1813                           ;rtc-ds1307.c: 299: SSP1CON2bits.ACKDT=0, SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN)
      +                          ;
  1814  000E6E  9AC5               	bcf	4037,5,c	;volatile
  1815  000E70  88C5               	bsf	4037,4,c	;volatile
  1816  000E72                     l244:
  1817  000E72  B8C5               	btfsc	4037,4,c	;volatile
  1818  000E74  D7FE               	goto	l244
  1819  000E76                     l247:
  1820  000E76  B8C5               	btfsc	4037,4,c	;volatile
  1821  000E78  D7FE               	goto	l247
  1822  000E7A                     l1513:
  1823  000E7A  A4C7               	btfss	4039,2,c	;volatile
  1824  000E7C  D003               	goto	u1530
  1825  000E7E  6A11               	clrf	??_rtc_get_time& (0+255),c
  1826  000E80  2A11               	incf	??_rtc_get_time& (0+255),f,c
  1827  000E82  D001               	goto	u1538
  1828  000E84                     u1530:
  1829  000E84  6A11               	clrf	??_rtc_get_time& (0+255),c
  1830  000E86                     u1538:
  1831  000E86  50C5               	movf	4037,w,c	;volatile
  1832  000E88  0B1F               	andlw	31
  1833  000E8A  1011               	iorwf	??_rtc_get_time,w,c
  1834  000E8C  0900               	iorlw	0
  1835  000E8E  A4D8               	btfss	status,2,c
  1836  000E90  D7F4               	goto	l1513
  1837                           
  1838                           ;rtc-ds1307.c: 308: temp = ReadI2C1();
  1839  000E92  EC40  F00A         	call	_ReadI2C1	;wreg free
  1840  000E96  6E12               	movwf	rtc_get_time@temp,c
  1841                           
  1842                           ;rtc-ds1307.c: 309: *month = (temp & 0x0f) + (((temp & 0x10) >> 4) * 10);
  1843  000E98  3812               	swapf	rtc_get_time@temp,w,c
  1844  000E9A  0B0F               	andlw	15
  1845  000E9C  0B01               	andlw	1
  1846  000E9E  0D0A               	mullw	10
  1847  000EA0  5012               	movf	rtc_get_time@temp,w,c
  1848  000EA2  0B0F               	andlw	15
  1849  000EA4  24F3               	addwf	prodl,w,c
  1850  000EA6  C00D  FFD9         	movff	rtc_get_time@month,fsr2l
  1851  000EAA  C00E  FFDA         	movff	rtc_get_time@month+1,fsr2h
  1852  000EAE  6EDF               	movwf	indf2,c
  1853                           
  1854                           ;rtc-ds1307.c: 310: SSP1CON2bits.ACKDT=0, SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN)
      +                          ;
  1855  000EB0  9AC5               	bcf	4037,5,c	;volatile
  1856  000EB2  88C5               	bsf	4037,4,c	;volatile
  1857  000EB4                     l253:
  1858  000EB4  B8C5               	btfsc	4037,4,c	;volatile
  1859  000EB6  D7FE               	goto	l253
  1860  000EB8                     l256:
  1861  000EB8  B8C5               	btfsc	4037,4,c	;volatile
  1862  000EBA  D7FE               	goto	l256
  1863  000EBC                     l1523:
  1864  000EBC  A4C7               	btfss	4039,2,c	;volatile
  1865  000EBE  D003               	goto	u1570
  1866  000EC0  6A11               	clrf	??_rtc_get_time& (0+255),c
  1867  000EC2  2A11               	incf	??_rtc_get_time& (0+255),f,c
  1868  000EC4  D001               	goto	u1578
  1869  000EC6                     u1570:
  1870  000EC6  6A11               	clrf	??_rtc_get_time& (0+255),c
  1871  000EC8                     u1578:
  1872  000EC8  50C5               	movf	4037,w,c	;volatile
  1873  000ECA  0B1F               	andlw	31
  1874  000ECC  1011               	iorwf	??_rtc_get_time,w,c
  1875  000ECE  0900               	iorlw	0
  1876  000ED0  A4D8               	btfss	status,2,c
  1877  000ED2  D7F4               	goto	l1523
  1878                           
  1879                           ;rtc-ds1307.c: 319: temp = ReadI2C1();
  1880  000ED4  EC40  F00A         	call	_ReadI2C1	;wreg free
  1881  000ED8  6E12               	movwf	rtc_get_time@temp,c
  1882                           
  1883                           ;rtc-ds1307.c: 320: *year = (temp & 0x0f) + ((temp >> 4) * 10);
  1884  000EDA  3812               	swapf	rtc_get_time@temp,w,c
  1885  000EDC  0B0F               	andlw	15
  1886  000EDE  0D0A               	mullw	10
  1887  000EE0  5012               	movf	rtc_get_time@temp,w,c
  1888  000EE2  0B0F               	andlw	15
  1889  000EE4  24F3               	addwf	prodl,w,c
  1890  000EE6  C00F  FFD9         	movff	rtc_get_time@year,fsr2l
  1891  000EEA  C010  FFDA         	movff	rtc_get_time@year+1,fsr2h
  1892  000EEE  6EDF               	movwf	indf2,c
  1893  000EF0                     l1529:
  1894  000EF0  A4C7               	btfss	4039,2,c	;volatile
  1895  000EF2  D003               	goto	u1590
  1896  000EF4  6A11               	clrf	??_rtc_get_time& (0+255),c
  1897  000EF6  2A11               	incf	??_rtc_get_time& (0+255),f,c
  1898  000EF8  D001               	goto	u1598
  1899  000EFA                     u1590:
  1900  000EFA  6A11               	clrf	??_rtc_get_time& (0+255),c
  1901  000EFC                     u1598:
  1902  000EFC  50C5               	movf	4037,w,c	;volatile
  1903  000EFE  0B1F               	andlw	31
  1904  000F00  1011               	iorwf	??_rtc_get_time,w,c
  1905  000F02  0900               	iorlw	0
  1906  000F04  A4D8               	btfss	status,2,c
  1907  000F06  D7F4               	goto	l1529
  1908                           
  1909                           ;rtc-ds1307.c: 327: SSP1CON2bits.ACKDT=1, SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN)
      +                          ;
  1910  000F08  8AC5               	bsf	4037,5,c	;volatile
  1911  000F0A  88C5               	bsf	4037,4,c	;volatile
  1912  000F0C                     l265:
  1913  000F0C  B8C5               	btfsc	4037,4,c	;volatile
  1914  000F0E  D7FE               	goto	l265
  1915  000F10                     l268:
  1916  000F10  B8C5               	btfsc	4037,4,c	;volatile
  1917  000F12  D7FE               	goto	l268
  1918  000F14                     l1531:
  1919  000F14  A4C7               	btfss	4039,2,c	;volatile
  1920  000F16  D003               	goto	u1630
  1921  000F18  6A11               	clrf	??_rtc_get_time& (0+255),c
  1922  000F1A  2A11               	incf	??_rtc_get_time& (0+255),f,c
  1923  000F1C  D001               	goto	u1638
  1924  000F1E                     u1630:
  1925  000F1E  6A11               	clrf	??_rtc_get_time& (0+255),c
  1926  000F20                     u1638:
  1927  000F20  50C5               	movf	4037,w,c	;volatile
  1928  000F22  0B1F               	andlw	31
  1929  000F24  1011               	iorwf	??_rtc_get_time,w,c
  1930  000F26  0900               	iorlw	0
  1931  000F28  A4D8               	btfss	status,2,c
  1932  000F2A  D7F4               	goto	l1531
  1933                           
  1934                           ;rtc-ds1307.c: 333: SSP1CON2bits.PEN=1;while(SSP1CON2bits.PEN);
  1935  000F2C  84C5               	bsf	4037,2,c	;volatile
  1936  000F2E                     l274:
  1937  000F2E  B4C5               	btfsc	4037,2,c	;volatile
  1938  000F30  D7FE               	goto	l274
  1939  000F32                     l277:
  1940  000F32  A4C5               	btfss	4037,2,c	;volatile
  1941  000F34  0012               	return	
  1942  000F36  D7FD               	goto	l277
  1943  000F38                     l1533:
  1944                           
  1945                           ;rtc-ds1307.c: 342: *seconds = 0;
  1946  000F38  C003  FFD9         	movff	rtc_get_time@seconds,fsr2l
  1947  000F3C  C004  FFDA         	movff	rtc_get_time@seconds+1,fsr2h
  1948  000F40  0E00               	movlw	0
  1949  000F42  6EDF               	movwf	indf2,c
  1950                           
  1951                           ;rtc-ds1307.c: 343: *minutes = 0;
  1952  000F44  C005  FFD9         	movff	rtc_get_time@minutes,fsr2l
  1953  000F48  C006  FFDA         	movff	rtc_get_time@minutes+1,fsr2h
  1954  000F4C  0E00               	movlw	0
  1955  000F4E  6EDF               	movwf	indf2,c
  1956                           
  1957                           ;rtc-ds1307.c: 344: *hours = 0;
  1958  000F50  C007  FFD9         	movff	rtc_get_time@hours,fsr2l
  1959  000F54  C008  FFDA         	movff	rtc_get_time@hours+1,fsr2h
  1960  000F58  0E00               	movlw	0
  1961  000F5A  6EDF               	movwf	indf2,c
  1962                           
  1963                           ;rtc-ds1307.c: 345: *day = 0;
  1964  000F5C  C009  FFD9         	movff	rtc_get_time@day,fsr2l
  1965  000F60  C00A  FFDA         	movff	rtc_get_time@day+1,fsr2h
  1966  000F64  0E00               	movlw	0
  1967  000F66  6EDF               	movwf	indf2,c
  1968                           
  1969                           ;rtc-ds1307.c: 346: *date = 1;
  1970  000F68  C00B  FFD9         	movff	rtc_get_time@date,fsr2l
  1971  000F6C  C00C  FFDA         	movff	rtc_get_time@date+1,fsr2h
  1972  000F70  0E01               	movlw	1
  1973  000F72  6EDF               	movwf	indf2,c
  1974                           
  1975                           ;rtc-ds1307.c: 347: *month = 1;
  1976  000F74  C00D  FFD9         	movff	rtc_get_time@month,fsr2l
  1977  000F78  C00E  FFDA         	movff	rtc_get_time@month+1,fsr2h
  1978  000F7C  0E01               	movlw	1
  1979  000F7E  6EDF               	movwf	indf2,c
  1980                           
  1981                           ;rtc-ds1307.c: 348: *year = 0;
  1982  000F80  C00F  FFD9         	movff	rtc_get_time@year,fsr2l
  1983  000F84  C010  FFDA         	movff	rtc_get_time@year+1,fsr2h
  1984  000F88  0E00               	movlw	0
  1985  000F8A  6EDF               	movwf	indf2,c
  1986  000F8C                     l1535:
  1987  000F8C  A4C7               	btfss	4039,2,c	;volatile
  1988  000F8E  D003               	goto	u1670
  1989  000F90  6A11               	clrf	??_rtc_get_time& (0+255),c
  1990  000F92  2A11               	incf	??_rtc_get_time& (0+255),f,c
  1991  000F94  D001               	goto	u1678
  1992  000F96                     u1670:
  1993  000F96  6A11               	clrf	??_rtc_get_time& (0+255),c
  1994  000F98                     u1678:
  1995  000F98  50C5               	movf	4037,w,c	;volatile
  1996  000F9A  0B1F               	andlw	31
  1997  000F9C  1011               	iorwf	??_rtc_get_time,w,c
  1998  000F9E  0900               	iorlw	0
  1999  000FA0  A4D8               	btfss	status,2,c
  2000  000FA2  D7F4               	goto	l1535
  2001                           
  2002                           ;rtc-ds1307.c: 352: SSP1CON2bits.PEN=1;while(SSP1CON2bits.PEN);
  2003  000FA4  84C5               	bsf	4037,2,c	;volatile
  2004  000FA6                     l284:
  2005  000FA6  B4C5               	btfsc	4037,2,c	;volatile
  2006  000FA8  D7FE               	goto	l284
  2007  000FAA                     l287:
  2008  000FAA  A4C5               	btfss	4037,2,c	;volatile
  2009                           
  2010                           ;rtc-ds1307.c: 356: return (0);
  2011                           ;	Return value of _rtc_get_time is never used
  2012  000FAC  0012               	return	
  2013  000FAE  D7FD               	goto	l287
  2014  000FB0                     __end_of_rtc_get_time:
  2015                           	opt stack 0
  2016                           tblptru	equ	0xFF8
  2017                           prodl	equ	0xFF3
  2018                           wreg	equ	0xFE8
  2019                           indf2	equ	0xFDF
  2020                           fsr2h	equ	0xFDA
  2021                           fsr2l	equ	0xFD9
  2022                           status	equ	0xFD8
  2023                           
  2024 ;; *************** function _WriteI2C1 *****************
  2025 ;; Defined at:
  2026 ;;		line 12 in file "C:\PROGRAM FILES (X86)\MICROCHIP\XC8\V1.33\sources\pic18\plib\i2c\i2c1writ.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;  data_out        1    wreg     unsigned char 
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;  data_out        1    1[COMRAM] unsigned char 
  2031 ;; Return value:  Size  Location     Type
  2032 ;;                  1    wreg      char 
  2033 ;; Registers used:
  2034 ;;		wreg, status,2, status,0
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 0/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2040 ;;      Params:         0       0       0       0       0       0       0       0       0
  2041 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2042 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2043 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2044 ;;Total ram usage:        2 bytes
  2045 ;; Hardware stack levels used:    1
  2046 ;; This function calls:
  2047 ;;		Nothing
  2048 ;; This function is called by:
  2049 ;;		_rtc_set_time
  2050 ;;		_rtc_get_time
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           
  2054                           	psect	text4
  2055  00131C                     __ptext4:
  2056                           	opt stack 0
  2057  00131C                     _WriteI2C1:
  2058                           	opt stack 29
  2059                           
  2060                           ;incstack = 0
  2061                           ;WriteI2C1@data_out stored from wreg
  2062  00131C  6E02               	movwf	WriteI2C1@data_out,c
  2063  00131E  C002  FFC9         	movff	WriteI2C1@data_out,4041	;volatile
  2064  001322  BEC6               	btfsc	4038,7,c	;volatile
  2065  001324  0012               	return	
  2066                           
  2067                           ;	Return value of _WriteI2C1 is never used
  2068  001326  CFC6 F001          	movff	4038,??_WriteI2C1	;volatile
  2069  00132A  0E0F               	movlw	15
  2070  00132C  1601               	andwf	??_WriteI2C1,f,c
  2071  00132E  5001               	movf	??_WriteI2C1,w,c
  2072  001330  0A08               	xorlw	8
  2073  001332  B4D8               	btfsc	status,2,c
  2074  001334  D00F               	goto	l1101
  2075  001336  CFC6 F001          	movff	4038,??_WriteI2C1	;volatile
  2076  00133A  0E0F               	movlw	15
  2077  00133C  1601               	andwf	??_WriteI2C1,f,c
  2078  00133E  5001               	movf	??_WriteI2C1,w,c
  2079  001340  0A0B               	xorlw	11
  2080  001342  B4D8               	btfsc	status,2,c
  2081  001344  D007               	goto	l1101
  2082  001346  88C6               	bsf	4038,4,c	;volatile
  2083  001348                     l416:
  2084  001348  A69E               	btfss	3998,3,c	;volatile
  2085  00134A  D7FE               	goto	l416
  2086  00134C  B4C7               	btfsc	4039,2,c	;volatile
  2087  00134E  0012               	return	
  2088  001350  50C7               	movf	4039,w,c	;volatile
  2089  001352  0012               	return	
  2090  001354                     l1101:
  2091  001354  CFC6 F001          	movff	4038,??_WriteI2C1	;volatile
  2092  001358  0E0F               	movlw	15
  2093  00135A  1601               	andwf	??_WriteI2C1,f,c
  2094  00135C  5001               	movf	??_WriteI2C1,w,c
  2095  00135E  0A08               	xorlw	8
  2096  001360  B4D8               	btfsc	status,2,c
  2097  001362  D008               	goto	l425
  2098  001364  CFC6 F001          	movff	4038,??_WriteI2C1	;volatile
  2099  001368  0E0F               	movlw	15
  2100  00136A  1601               	andwf	??_WriteI2C1,f,c
  2101  00136C  5001               	movf	??_WriteI2C1,w,c
  2102  00136E  0A0B               	xorlw	11
  2103  001370  A4D8               	btfss	status,2,c
  2104  001372  0012               	return	
  2105  001374                     l425:
  2106  001374  B0C7               	btfsc	4039,0,c	;volatile
  2107  001376  D7FE               	goto	l425
  2108  001378                     l1105:
  2109  001378  A4C7               	btfss	4039,2,c	;volatile
  2110  00137A  D003               	goto	u200
  2111  00137C  6A01               	clrf	??_WriteI2C1& (0+255),c
  2112  00137E  2A01               	incf	??_WriteI2C1& (0+255),f,c
  2113  001380  D001               	goto	u208
  2114  001382                     u200:
  2115  001382  6A01               	clrf	??_WriteI2C1& (0+255),c
  2116  001384                     u208:
  2117  001384  50C5               	movf	4037,w,c	;volatile
  2118  001386  0B1F               	andlw	31
  2119  001388  1001               	iorwf	??_WriteI2C1,w,c
  2120  00138A  0900               	iorlw	0
  2121  00138C  A4D8               	btfss	status,2,c
  2122  00138E  D7F4               	goto	l1105
  2123  001390  50C5               	movf	4037,w,c	;volatile
  2124  001392  0012               	return	
  2125  001394                     __end_of_WriteI2C1:
  2126                           	opt stack 0
  2127                           tblptru	equ	0xFF8
  2128                           prodl	equ	0xFF3
  2129                           wreg	equ	0xFE8
  2130                           indf2	equ	0xFDF
  2131                           fsr2h	equ	0xFDA
  2132                           fsr2l	equ	0xFD9
  2133                           status	equ	0xFD8
  2134                           
  2135 ;; *************** function _ReadI2C1 *****************
  2136 ;; Defined at:
  2137 ;;		line 11 in file "C:\PROGRAM FILES (X86)\MICROCHIP\XC8\V1.33\sources\pic18\plib\i2c\i2c1read.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;		None
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;		None
  2142 ;; Return value:  Size  Location     Type
  2143 ;;                  1    wreg      unsigned char 
  2144 ;; Registers used:
  2145 ;;		wreg, status,2, status,0
  2146 ;; Tracked objects:
  2147 ;;		On entry : 0/0
  2148 ;;		On exit  : 0/0
  2149 ;;		Unchanged: 0/0
  2150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2151 ;;      Params:         0       0       0       0       0       0       0       0       0
  2152 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2153 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2154 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2155 ;;Total ram usage:        1 bytes
  2156 ;; Hardware stack levels used:    1
  2157 ;; This function calls:
  2158 ;;		Nothing
  2159 ;; This function is called by:
  2160 ;;		_rtc_get_time
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           	psect	text5
  2165  001480                     __ptext5:
  2166                           	opt stack 0
  2167  001480                     _ReadI2C1:
  2168                           	opt stack 29
  2169                           
  2170                           ;incstack = 0
  2171  001480  CFC6 F001          	movff	4038,??_ReadI2C1	;volatile
  2172  001484  0E0F               	movlw	15
  2173  001486  1601               	andwf	??_ReadI2C1,f,c
  2174  001488  5001               	movf	??_ReadI2C1,w,c
  2175  00148A  0A08               	xorlw	8
  2176  00148C  B4D8               	btfsc	status,2,c
  2177  00148E  D007               	goto	l391
  2178  001490  CFC6 F001          	movff	4038,??_ReadI2C1	;volatile
  2179  001494  0E0F               	movlw	15
  2180  001496  1601               	andwf	??_ReadI2C1,f,c
  2181  001498  5001               	movf	??_ReadI2C1,w,c
  2182  00149A  0A0B               	xorlw	11
  2183  00149C  B4D8               	btfsc	status,2,c
  2184  00149E                     l391:
  2185  00149E  86C5               	bsf	4037,3,c	;volatile
  2186  0014A0                     l392:
  2187  0014A0  A0C7               	btfss	4039,0,c	;volatile
  2188  0014A2  D7FE               	goto	l392
  2189  0014A4  50C9               	movf	4041,w,c	;volatile
  2190  0014A6  0012               	return	
  2191  0014A8                     __end_of_ReadI2C1:
  2192                           	opt stack 0
  2193                           tblptru	equ	0xFF8
  2194                           prodl	equ	0xFF3
  2195                           wreg	equ	0xFE8
  2196                           indf2	equ	0xFDF
  2197                           fsr2h	equ	0xFDA
  2198                           fsr2l	equ	0xFD9
  2199                           status	equ	0xFD8
  2200                           
  2201 ;; *************** function _printf *****************
  2202 ;; Defined at:
  2203 ;;		line 464 in file "C:\PROGRAM FILES (X86)\MICROCHIP\XC8\V1.33\sources\common\doprnt.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;  f               2   26[COMRAM] PTR const unsigned char 
  2206 ;;		 -> STR_2(30), STR_1(29), 
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;  _val            5   45[COMRAM] struct .
  2209 ;;  ap              2   42[COMRAM] PTR void [1]
  2210 ;;		 -> ?_printf(2), 
  2211 ;;  c               1   51[COMRAM] char 
  2212 ;;  prec            1   50[COMRAM] char 
  2213 ;;  flag            1   44[COMRAM] unsigned char 
  2214 ;; Return value:  Size  Location     Type
  2215 ;;                  2   26[COMRAM] int 
  2216 ;; Registers used:
  2217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/0
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: 0/0
  2222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2223 ;;      Params:        14       0       0       0       0       0       0       0       0
  2224 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2225 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2226 ;;      Totals:        26       0       0       0       0       0       0       0       0
  2227 ;;Total ram usage:       26 bytes
  2228 ;; Hardware stack levels used:    1
  2229 ;; Hardware stack levels required when called:    2
  2230 ;; This function calls:
  2231 ;;		___lwdiv
  2232 ;;		___lwmod
  2233 ;;		_isdigit
  2234 ;;		_putch
  2235 ;; This function is called by:
  2236 ;;		_main
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           	psect	text6
  2241  000FB0                     __ptext6:
  2242                           	opt stack 0
  2243  000FB0                     _printf:
  2244                           	opt stack 28
  2245                           
  2246                           ;doprnt.c: 466: va_list ap;
  2247                           ;doprnt.c: 499: signed char c;
  2248                           ;doprnt.c: 506: signed char prec;
  2249                           ;doprnt.c: 508: unsigned char flag;
  2250                           ;doprnt.c: 527: union {
  2251                           ;doprnt.c: 528: unsigned int _val;
  2252                           ;doprnt.c: 529: struct {
  2253                           ;doprnt.c: 530: const char * _cp;
  2254                           ;doprnt.c: 531: unsigned _len;
  2255                           ;doprnt.c: 532: } _str;
  2256                           ;doprnt.c: 533: } _val;
  2257                           ;doprnt.c: 542: *ap = __va_start();
  2258                           
  2259                           ;incstack = 0
  2260  000FB0  0E00               	movlw	high (?_printf+2)
  2261  000FB2  6E2C               	movwf	printf@ap+1,c
  2262  000FB4  0E1D               	movlw	low (?_printf+2)
  2263  000FB6  6E2B               	movwf	printf@ap,c
  2264                           
  2265                           ;doprnt.c: 545: while(c = *f++) {
  2266  000FB8  D0CB               	goto	l1647
  2267  000FBA                     l1575:
  2268                           
  2269                           ;doprnt.c: 547: if(c != '%')
  2270  000FBA  5034               	movf	printf@c,w,c
  2271  000FBC  0A25               	xorlw	37
  2272  000FBE  B4D8               	btfsc	status,2,c
  2273  000FC0  D004               	goto	l1579
  2274                           
  2275                           ;doprnt.c: 549: {
  2276                           ;doprnt.c: 550: (putch(c) );
  2277  000FC2  5034               	movf	printf@c,w,c
  2278  000FC4  EC8D  F00A         	call	_putch
  2279                           
  2280                           ;doprnt.c: 551: continue;
  2281  000FC8  D0C3               	goto	l1647
  2282  000FCA                     l1579:
  2283                           
  2284                           ;doprnt.c: 552: }
  2285                           ;doprnt.c: 557: flag = 0;
  2286  000FCA  0E00               	movlw	0
  2287  000FCC  6E2D               	movwf	printf@flag,c
  2288                           
  2289                           ;doprnt.c: 620: if(*f == '.') {
  2290  000FCE  C01B  FFF6         	movff	printf@f,tblptrl
  2291  000FD2  C01C  FFF7         	movff	printf@f+1,tblptrh
  2292  000FD6                     	if	0	;tblptru may be non-zero
  2293  000FD6                     	endif
  2294  000FD6                     	if	0	;tblptru may be non-zero
  2295  000FD6                     	endif
  2296  000FD6  0008               	tblrd		*
  2297  000FD8  50F5               	movf	tablat,w,c
  2298  000FDA  0A2E               	xorlw	46
  2299  000FDC  A4D8               	btfss	status,2,c
  2300  000FDE  D01F               	goto	l1593
  2301                           
  2302                           ;doprnt.c: 622: f++;
  2303  000FE0  4A1B               	infsnz	printf@f,f,c
  2304  000FE2  2A1C               	incf	printf@f+1,f,c
  2305                           
  2306                           ;doprnt.c: 629: {
  2307                           ;doprnt.c: 630: prec = 0;
  2308  000FE4  0E00               	movlw	0
  2309  000FE6  6E33               	movwf	printf@prec,c
  2310                           
  2311                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
  2312  000FE8  D00F               	goto	l1591
  2313  000FEA                     l1587:
  2314                           
  2315                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
  2316  000FEA  C01B  FFF6         	movff	printf@f,tblptrl
  2317  000FEE  C01C  FFF7         	movff	printf@f+1,tblptrh
  2318  000FF2                     	if	0	;tblptru may be non-zero
  2319  000FF2                     	endif
  2320  000FF2                     	if	0	;tblptru may be non-zero
  2321  000FF2                     	endif
  2322  000FF2  0008               	tblrd		*
  2323  000FF4  CFF5 F029          	movff	tablat,??_printf
  2324  000FF8  5033               	movf	printf@prec,w,c
  2325  000FFA  0D0A               	mullw	10
  2326  000FFC  50F3               	movf	prodl,w,c
  2327  000FFE  2429               	addwf	??_printf,w,c
  2328  001000  0FD0               	addlw	208
  2329  001002  6E33               	movwf	printf@prec,c
  2330  001004  4A1B               	infsnz	printf@f,f,c
  2331  001006  2A1C               	incf	printf@f+1,f,c
  2332  001008                     l1591:
  2333  001008  C01B  FFF6         	movff	printf@f,tblptrl
  2334  00100C  C01C  FFF7         	movff	printf@f+1,tblptrh
  2335  001010                     	if	0	;tblptru may be non-zero
  2336  001010                     	endif
  2337  001010                     	if	0	;tblptru may be non-zero
  2338  001010                     	endif
  2339  001010  0008               	tblrd		*
  2340  001012  50F5               	movf	tablat,w,c
  2341  001014  EC54  F00A         	call	_isdigit
  2342  001018  A0D8               	btfss	status,0,c
  2343  00101A  D003               	goto	l1597
  2344  00101C  D7E6               	goto	l1587
  2345  00101E                     l1593:
  2346                           
  2347                           ;doprnt.c: 635: prec = 0;
  2348  00101E  0E00               	movlw	0
  2349  001020  6E33               	movwf	printf@prec,c
  2350  001022                     l1597:
  2351  001022  C01B  FFF6         	movff	printf@f,tblptrl
  2352  001026  C01C  FFF7         	movff	printf@f+1,tblptrh
  2353  00102A  4A1B               	infsnz	printf@f,f,c
  2354  00102C  2A1C               	incf	printf@f+1,f,c
  2355  00102E                     	if	0	;tblptru may be non-zero
  2356  00102E                     	endif
  2357  00102E                     	if	0	;tblptru may be non-zero
  2358  00102E                     	endif
  2359  00102E  0008               	tblrd		*
  2360  001030  CFF5 F034          	movff	tablat,printf@c
  2361  001034  5034               	movf	printf@c& (0+255),w,c
  2362                           
  2363                           ; Switch size 1, requested type "space"
  2364                           ; Number of cases is 3, Range of values is 0 to 105
  2365                           ; switch strategies available:
  2366                           ; Name         Instructions Cycles
  2367                           ; simple_byte           10     6 (average)
  2368                           ;	Chosen strategy is simple_byte
  2369  001036  0A00               	xorlw	0	; case 0
  2370  001038  B4D8               	btfsc	status,2,c
  2371  00103A  0012               	return	
  2372  00103C  0A64               	xorlw	100	; case 100
  2373  00103E  B4D8               	btfsc	status,2,c
  2374  001040  D003               	goto	l1599
  2375  001042  0A0D               	xorlw	13	; case 105
  2376  001044  A4D8               	btfss	status,2,c
  2377  001046  D084               	goto	l1647
  2378  001048                     l1599:
  2379                           
  2380                           ;doprnt.c: 1262: {
  2381                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2382  001048  C02B  FFD9         	movff	printf@ap,fsr2l
  2383  00104C  C02C  FFDA         	movff	printf@ap+1,fsr2h
  2384  001050  CFDE F02E          	movff	postinc2,printf@_val
  2385  001054  CFDD F02F          	movff	postdec2,printf@_val+1
  2386  001058  0E02               	movlw	2
  2387  00105A  262B               	addwf	printf@ap,f,c
  2388  00105C  0E00               	movlw	0
  2389  00105E  222C               	addwfc	printf@ap+1,f,c
  2390                           
  2391                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  2392  001060  502F               	movf	printf@_val+1,w,c
  2393  001062  0A80               	xorlw	128
  2394  001064  6EF3               	movwf	prodl,c
  2395  001066  0E80               	movlw	128
  2396  001068  5CF3               	subwf	prodl,w,c
  2397  00106A  0E00               	movlw	0
  2398  00106C  B4D8               	btfsc	status,2,c
  2399  00106E  5C2E               	subwf	printf@_val,w,c
  2400  001070  B0D8               	btfsc	status,0,c
  2401  001072  D006               	goto	l1609
  2402                           
  2403                           ;doprnt.c: 1271: flag |= 0x03;
  2404  001074  0E03               	movlw	3
  2405  001076  122D               	iorwf	printf@flag,f,c
  2406                           
  2407                           ;doprnt.c: 1272: _val._val = -_val._val;
  2408  001078  6C2E               	negf	printf@_val,c
  2409  00107A  1E2F               	comf	printf@_val+1,f,c
  2410  00107C  B0D8               	btfsc	status,0,c
  2411  00107E  2A2F               	incf	printf@_val+1,f,c
  2412  001080                     l1609:
  2413                           
  2414                           ;doprnt.c: 1273: }
  2415                           ;doprnt.c: 1275: }
  2416                           ;doprnt.c: 1299: if(prec == 0 && _val._val == 0)
  2417  001080  6633               	tstfsz	printf@prec,c
  2418  001082  D004               	goto	l1615
  2419  001084  502F               	movf	printf@_val+1,w,c
  2420  001086  102E               	iorwf	printf@_val,w,c
  2421  001088  B4D8               	btfsc	status,2,c
  2422                           
  2423                           ;doprnt.c: 1300: prec++;
  2424  00108A  2A33               	incf	printf@prec,f,c
  2425  00108C                     l1615:
  2426                           
  2427                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2428  00108C  0E01               	movlw	1
  2429  00108E  6E34               	movwf	printf@c,c
  2430  001090  5034               	movf	printf@c,w,c
  2431  001092  0A05               	xorlw	5
  2432  001094  B4D8               	btfsc	status,2,c
  2433  001096  D016               	goto	l1629
  2434                           
  2435                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  2436  001098  5034               	movf	printf@c,w,c
  2437  00109A  0D02               	mullw	2
  2438  00109C  0E01               	movlw	low _dpowers
  2439  00109E  24F3               	addwf	prodl,w,c
  2440  0010A0  6EF6               	movwf	tblptrl,c
  2441  0010A2  0E08               	movlw	high _dpowers
  2442  0010A4  20F4               	addwfc	prodh,w,c
  2443  0010A6  6EF7               	movwf	tblptrh,c
  2444  0010A8                     	if	0	;There are less than 3 active tblptr bytes
  2445  0010A8                     	endif
  2446  0010A8  0009               	tblrd		*+
  2447  0010AA  CFF5 F029          	movff	tablat,??_printf
  2448  0010AE  0009               	tblrd		*+
  2449  0010B0  CFF5 F02A          	movff	tablat,??_printf+1
  2450  0010B4  5029               	movf	??_printf,w,c
  2451  0010B6  5C2E               	subwf	printf@_val,w,c
  2452  0010B8  502A               	movf	??_printf+1,w,c
  2453  0010BA  582F               	subwfb	printf@_val+1,w,c
  2454  0010BC  A0D8               	btfss	status,0,c
  2455  0010BE  D002               	goto	l1629
  2456                           
  2457                           ;doprnt.c: 1316: break;
  2458  0010C0  2A34               	incf	printf@c,f,c
  2459  0010C2  D7E6               	goto	L3
  2460  0010C4                     l1629:
  2461                           
  2462                           ;doprnt.c: 1348: if(c < prec)
  2463  0010C4  5034               	movf	printf@c,w,c
  2464  0010C6  0A80               	xorlw	128
  2465  0010C8  6E29               	movwf	??_printf& (0+255),c
  2466  0010CA  5033               	movf	printf@prec,w,c
  2467  0010CC  0A80               	xorlw	128
  2468  0010CE  5C29               	subwf	??_printf,w,c
  2469  0010D0  B0D8               	btfsc	status,0,c
  2470  0010D2  D003               	goto	l1633
  2471                           
  2472                           ;doprnt.c: 1349: c = prec;
  2473  0010D4  C033  F034         	movff	printf@prec,printf@c
  2474  0010D8  D009               	goto	l1637
  2475  0010DA                     l1633:
  2476                           
  2477                           ;doprnt.c: 1350: else if(prec < c)
  2478  0010DA  5033               	movf	printf@prec,w,c
  2479  0010DC  0A80               	xorlw	128
  2480  0010DE  6E29               	movwf	??_printf& (0+255),c
  2481  0010E0  5034               	movf	printf@c,w,c
  2482  0010E2  0A80               	xorlw	128
  2483  0010E4  5C29               	subwf	??_printf,w,c
  2484  0010E6  A0D8               	btfss	status,0,c
  2485                           
  2486                           ;doprnt.c: 1351: prec = c;
  2487  0010E8  C034  F033         	movff	printf@c,printf@prec
  2488  0010EC                     l1637:
  2489                           
  2490                           ;doprnt.c: 1431: {
  2491                           ;doprnt.c: 1447: if(flag & 0x03)
  2492  0010EC  C02D  F029         	movff	printf@flag,??_printf
  2493  0010F0  0E03               	movlw	3
  2494  0010F2  1629               	andwf	??_printf,f,c
  2495  0010F4  B4D8               	btfsc	status,2,c
  2496  0010F6  D028               	goto	l1645
  2497                           
  2498                           ;doprnt.c: 1448: (putch('-') );
  2499  0010F8  0E2D               	movlw	45
  2500  0010FA  EC8D  F00A         	call	_putch
  2501  0010FE  D024               	goto	l1645
  2502  001100                     l1641:
  2503                           
  2504                           ;doprnt.c: 1487: {
  2505                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  2506  001100  5033               	movf	printf@prec,w,c
  2507  001102  0D02               	mullw	2
  2508  001104  0E01               	movlw	low _dpowers
  2509  001106  24F3               	addwf	prodl,w,c
  2510  001108  6EF6               	movwf	tblptrl,c
  2511  00110A  0E08               	movlw	high _dpowers
  2512  00110C  20F4               	addwfc	prodh,w,c
  2513  00110E  6EF7               	movwf	tblptrh,c
  2514  001110                     	if	0	;There are less than 3 active tblptr bytes
  2515  001110                     	endif
  2516  001110  0009               	tblrd		*+
  2517  001112  CFF5 F003          	movff	tablat,___lwdiv@divisor
  2518  001116  000A               	tblrd		*-
  2519  001118  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  2520  00111C  C02E  F001         	movff	printf@_val,___lwdiv@dividend
  2521  001120  C02F  F002         	movff	printf@_val+1,___lwdiv@dividend+1
  2522  001124  ECF6  F009         	call	___lwdiv	;wreg free
  2523  001128  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  2524  00112C  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  2525  001130  0E00               	movlw	0
  2526  001132  6E0B               	movwf	___lwmod@divisor+1,c
  2527  001134  0E0A               	movlw	10
  2528  001136  6E0A               	movwf	___lwmod@divisor,c
  2529  001138  EC1F  F00A         	call	___lwmod	;wreg free
  2530  00113C  5008               	movf	?___lwmod,w,c
  2531  00113E  0F30               	addlw	48
  2532  001140  6E34               	movwf	printf@c,c
  2533                           
  2534                           ;doprnt.c: 1532: }
  2535                           ;doprnt.c: 1533: (putch(c) );
  2536  001142  5034               	movf	printf@c,w,c
  2537  001144  EC8D  F00A         	call	_putch
  2538  001148                     l1645:
  2539  001148  0633               	decf	printf@prec,f,c
  2540  00114A  2833               	incf	printf@prec& (0+255),w,c
  2541  00114C  A4D8               	btfss	status,2,c
  2542  00114E  D7D8               	goto	l1641
  2543  001150                     l1647:
  2544  001150  C01B  FFF6         	movff	printf@f,tblptrl
  2545  001154  C01C  FFF7         	movff	printf@f+1,tblptrh
  2546  001158  4A1B               	infsnz	printf@f,f,c
  2547  00115A  2A1C               	incf	printf@f+1,f,c
  2548  00115C                     	if	0	;tblptru may be non-zero
  2549  00115C                     	endif
  2550  00115C                     	if	0	;tblptru may be non-zero
  2551  00115C                     	endif
  2552  00115C  0008               	tblrd		*
  2553  00115E  CFF5 F034          	movff	tablat,printf@c
  2554  001162  6634               	tstfsz	printf@c& (0+255),c
  2555  001164  D72A               	goto	l1575
  2556  001166  0012               	return	
  2557  001168                     __end_of_printf:
  2558                           	opt stack 0
  2559                           tblptru	equ	0xFF8
  2560                           tblptrh	equ	0xFF7
  2561                           tblptrl	equ	0xFF6
  2562                           tablat	equ	0xFF5
  2563                           prodh	equ	0xFF4
  2564                           prodl	equ	0xFF3
  2565                           wreg	equ	0xFE8
  2566                           indf2	equ	0xFDF
  2567                           postinc2	equ	0xFDE
  2568                           postdec2	equ	0xFDD
  2569                           fsr2h	equ	0xFDA
  2570                           fsr2l	equ	0xFD9
  2571                           status	equ	0xFD8
  2572                           
  2573 ;; *************** function _putch *****************
  2574 ;; Defined at:
  2575 ;;		line 50 in file "PICDS1307.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;  data            1    wreg     unsigned char 
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;  data            1    1[COMRAM] unsigned char 
  2580 ;; Return value:  Size  Location     Type
  2581 ;;		None               void
  2582 ;; Registers used:
  2583 ;;		wreg, status,2, cstack
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2589 ;;      Params:         0       0       0       0       0       0       0       0       0
  2590 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2591 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2592 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2593 ;;Total ram usage:        1 bytes
  2594 ;; Hardware stack levels used:    1
  2595 ;; Hardware stack levels required when called:    1
  2596 ;; This function calls:
  2597 ;;		_Write1USART
  2598 ;; This function is called by:
  2599 ;;		_printf
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text7
  2604  00151A                     __ptext7:
  2605                           	opt stack 0
  2606  00151A                     _putch:
  2607                           	opt stack 28
  2608                           
  2609                           ;incstack = 0
  2610                           ;putch@data stored from wreg
  2611  00151A  6E02               	movwf	putch@data,c
  2612                           
  2613                           ;PICDS1307.c: 53: Write1USART(data);
  2614  00151C  5002               	movf	putch@data,w,c
  2615  00151E  EC7C  F00A         	call	_Write1USART
  2616  001522                     l32:
  2617  001522  B2AC               	btfsc	4012,1,c	;volatile
  2618  001524  0012               	return	
  2619  001526  D7FD               	goto	l32
  2620  001528                     __end_of_putch:
  2621                           	opt stack 0
  2622                           tblptru	equ	0xFF8
  2623                           tblptrh	equ	0xFF7
  2624                           tblptrl	equ	0xFF6
  2625                           tablat	equ	0xFF5
  2626                           prodh	equ	0xFF4
  2627                           prodl	equ	0xFF3
  2628                           wreg	equ	0xFE8
  2629                           indf2	equ	0xFDF
  2630                           postinc2	equ	0xFDE
  2631                           postdec2	equ	0xFDD
  2632                           fsr2h	equ	0xFDA
  2633                           fsr2l	equ	0xFD9
  2634                           status	equ	0xFD8
  2635                           
  2636 ;; *************** function _Write1USART *****************
  2637 ;; Defined at:
  2638 ;;		line 14 in file "C:\PROGRAM FILES (X86)\MICROCHIP\XC8\V1.33\sources\pic18\plib\USART\u1write.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;  data            1    wreg     unsigned char 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  data            1    0[COMRAM] unsigned char 
  2643 ;; Return value:  Size  Location     Type
  2644 ;;		None               void
  2645 ;; Registers used:
  2646 ;;		wreg
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2652 ;;      Params:         0       0       0       0       0       0       0       0       0
  2653 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2654 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2655 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2656 ;;Total ram usage:        1 bytes
  2657 ;; Hardware stack levels used:    1
  2658 ;; This function calls:
  2659 ;;		Nothing
  2660 ;; This function is called by:
  2661 ;;		_putch
  2662 ;; This function uses a non-reentrant model
  2663 ;;
  2664                           
  2665                           	psect	text8
  2666  0014F8                     __ptext8:
  2667                           	opt stack 0
  2668  0014F8                     _Write1USART:
  2669                           	opt stack 28
  2670                           
  2671                           ;incstack = 0
  2672                           ;Write1USART@data stored from wreg
  2673  0014F8  6E01               	movwf	Write1USART@data,c
  2674  0014FA  ACAC               	btfss	4012,6,c	;volatile
  2675  0014FC  D003               	goto	l1029
  2676  0014FE  90AC               	bcf	4012,0,c	;volatile
  2677  001500  B23F               	btfsc	_USART1_Status,1,c
  2678  001502  80AC               	bsf	4012,0,c	;volatile
  2679  001504                     l1029:
  2680  001504  C001  FFAD         	movff	Write1USART@data,4013	;volatile
  2681  001508  0012               	return	
  2682  00150A                     __end_of_Write1USART:
  2683                           	opt stack 0
  2684                           tblptru	equ	0xFF8
  2685                           tblptrh	equ	0xFF7
  2686                           tblptrl	equ	0xFF6
  2687                           tablat	equ	0xFF5
  2688                           prodh	equ	0xFF4
  2689                           prodl	equ	0xFF3
  2690                           wreg	equ	0xFE8
  2691                           indf2	equ	0xFDF
  2692                           postinc2	equ	0xFDE
  2693                           postdec2	equ	0xFDD
  2694                           fsr2h	equ	0xFDA
  2695                           fsr2l	equ	0xFD9
  2696                           status	equ	0xFD8
  2697                           
  2698 ;; *************** function _isdigit *****************
  2699 ;; Defined at:
  2700 ;;		line 8 in file "C:\PROGRAM FILES (X86)\MICROCHIP\XC8\V1.33\sources\common\isdigit.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;  c               1    wreg     unsigned char 
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;  c               1    2[COMRAM] unsigned char 
  2705 ;; Return value:  Size  Location     Type
  2706 ;;		None               void
  2707 ;; Registers used:
  2708 ;;		wreg, status,2, status,0
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2714 ;;      Params:         0       0       0       0       0       0       0       0       0
  2715 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2716 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2717 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2718 ;;Total ram usage:        3 bytes
  2719 ;; Hardware stack levels used:    1
  2720 ;; This function calls:
  2721 ;;		Nothing
  2722 ;; This function is called by:
  2723 ;;		_printf
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727                           	psect	text9
  2728  0014A8                     __ptext9:
  2729                           	opt stack 0
  2730  0014A8                     _isdigit:
  2731                           	opt stack 29
  2732                           
  2733                           ;incstack = 0
  2734                           ;isdigit@c stored from wreg
  2735  0014A8  6E03               	movwf	isdigit@c,c
  2736  0014AA  0E00               	movlw	0
  2737  0014AC  6E02               	movwf	_isdigit$1735,c
  2738  0014AE  0E3A               	movlw	58
  2739  0014B0  5C03               	subwf	isdigit@c,w,c
  2740  0014B2  B0D8               	btfsc	status,0,c
  2741  0014B4  D005               	goto	l1569
  2742  0014B6  0E2F               	movlw	47
  2743  0014B8  6403               	cpfsgt	isdigit@c,c
  2744  0014BA  D002               	goto	l1569
  2745  0014BC  0E01               	movlw	1
  2746  0014BE  6E02               	movwf	_isdigit$1735,c
  2747  0014C0                     l1569:
  2748  0014C0  C002  F001         	movff	_isdigit$1735,??_isdigit
  2749  0014C4  3001               	rrcf	??_isdigit,w,c
  2750  0014C6  0012               	return	
  2751  0014C8                     __end_of_isdigit:
  2752                           	opt stack 0
  2753                           tblptru	equ	0xFF8
  2754                           tblptrh	equ	0xFF7
  2755                           tblptrl	equ	0xFF6
  2756                           tablat	equ	0xFF5
  2757                           prodh	equ	0xFF4
  2758                           prodl	equ	0xFF3
  2759                           wreg	equ	0xFE8
  2760                           indf2	equ	0xFDF
  2761                           postinc2	equ	0xFDE
  2762                           postdec2	equ	0xFDD
  2763                           fsr2h	equ	0xFDA
  2764                           fsr2l	equ	0xFD9
  2765                           status	equ	0xFD8
  2766                           
  2767 ;; *************** function ___lwmod *****************
  2768 ;; Defined at:
  2769 ;;		line 8 in file "C:\PROGRAM FILES (X86)\MICROCHIP\XC8\V1.33\sources\common\lwmod.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;  dividend        2    7[COMRAM] unsigned int 
  2772 ;;  divisor         2    9[COMRAM] unsigned int 
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;  counter         1   11[COMRAM] unsigned char 
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  2    7[COMRAM] unsigned int 
  2777 ;; Registers used:
  2778 ;;		wreg, status,2, status,0
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2784 ;;      Params:         4       0       0       0       0       0       0       0       0
  2785 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2786 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2787 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2788 ;;Total ram usage:        5 bytes
  2789 ;; Hardware stack levels used:    1
  2790 ;; This function calls:
  2791 ;;		Nothing
  2792 ;; This function is called by:
  2793 ;;		_printf
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           	psect	text10
  2798  00143E                     __ptext10:
  2799                           	opt stack 0
  2800  00143E                     ___lwmod:
  2801                           	opt stack 29
  2802                           
  2803                           ;incstack = 0
  2804  00143E  500B               	movf	___lwmod@divisor+1,w,c
  2805  001440  100A               	iorwf	___lwmod@divisor,w,c
  2806  001442  B4D8               	btfsc	status,2,c
  2807  001444  D018               	goto	l962
  2808  001446  0E01               	movlw	1
  2809  001448  6E0C               	movwf	___lwmod@counter,c
  2810  00144A  D004               	goto	l1203
  2811  00144C                     l1201:
  2812  00144C  90D8               	bcf	status,0,c
  2813  00144E  360A               	rlcf	___lwmod@divisor,f,c
  2814  001450  360B               	rlcf	___lwmod@divisor+1,f,c
  2815  001452  2A0C               	incf	___lwmod@counter,f,c
  2816  001454                     l1203:
  2817  001454  AE0B               	btfss	___lwmod@divisor+1,7,c
  2818  001456  D7FA               	goto	l1201
  2819  001458                     l1205:
  2820  001458  500A               	movf	___lwmod@divisor,w,c
  2821  00145A  5C08               	subwf	___lwmod@dividend,w,c
  2822  00145C  500B               	movf	___lwmod@divisor+1,w,c
  2823  00145E  5809               	subwfb	___lwmod@dividend+1,w,c
  2824  001460  A0D8               	btfss	status,0,c
  2825  001462  D004               	goto	l1209
  2826  001464  500A               	movf	___lwmod@divisor,w,c
  2827  001466  5E08               	subwf	___lwmod@dividend,f,c
  2828  001468  500B               	movf	___lwmod@divisor+1,w,c
  2829  00146A  5A09               	subwfb	___lwmod@dividend+1,f,c
  2830  00146C                     l1209:
  2831  00146C  90D8               	bcf	status,0,c
  2832  00146E  320B               	rrcf	___lwmod@divisor+1,f,c
  2833  001470  320A               	rrcf	___lwmod@divisor,f,c
  2834  001472  2E0C               	decfsz	___lwmod@counter,f,c
  2835  001474  D7F1               	goto	l1205
  2836  001476                     l962:
  2837  001476  C008  F008         	movff	___lwmod@dividend,?___lwmod
  2838  00147A  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  2839  00147E  0012               	return	
  2840  001480                     __end_of___lwmod:
  2841                           	opt stack 0
  2842                           tblptru	equ	0xFF8
  2843                           tblptrh	equ	0xFF7
  2844                           tblptrl	equ	0xFF6
  2845                           tablat	equ	0xFF5
  2846                           prodh	equ	0xFF4
  2847                           prodl	equ	0xFF3
  2848                           wreg	equ	0xFE8
  2849                           indf2	equ	0xFDF
  2850                           postinc2	equ	0xFDE
  2851                           postdec2	equ	0xFDD
  2852                           fsr2h	equ	0xFDA
  2853                           fsr2l	equ	0xFD9
  2854                           status	equ	0xFD8
  2855                           
  2856 ;; *************** function ___lwdiv *****************
  2857 ;; Defined at:
  2858 ;;		line 8 in file "C:\PROGRAM FILES (X86)\MICROCHIP\XC8\V1.33\sources\common\lwdiv.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;  dividend        2    0[COMRAM] unsigned int 
  2861 ;;  divisor         2    2[COMRAM] unsigned int 
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;  quotient        2    4[COMRAM] unsigned int 
  2864 ;;  counter         1    6[COMRAM] unsigned char 
  2865 ;; Return value:  Size  Location     Type
  2866 ;;                  2    0[COMRAM] unsigned int 
  2867 ;; Registers used:
  2868 ;;		wreg, status,2, status,0
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2874 ;;      Params:         4       0       0       0       0       0       0       0       0
  2875 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2876 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2877 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2878 ;;Total ram usage:        7 bytes
  2879 ;; Hardware stack levels used:    1
  2880 ;; This function calls:
  2881 ;;		Nothing
  2882 ;; This function is called by:
  2883 ;;		_printf
  2884 ;; This function uses a non-reentrant model
  2885 ;;
  2886                           
  2887                           	psect	text11
  2888  0013EC                     __ptext11:
  2889                           	opt stack 0
  2890  0013EC                     ___lwdiv:
  2891                           	opt stack 29
  2892                           
  2893                           ;incstack = 0
  2894  0013EC  0E00               	movlw	0
  2895  0013EE  6E06               	movwf	___lwdiv@quotient+1,c
  2896  0013F0  0E00               	movlw	0
  2897  0013F2  6E05               	movwf	___lwdiv@quotient,c
  2898  0013F4  5004               	movf	___lwdiv@divisor+1,w,c
  2899  0013F6  1003               	iorwf	___lwdiv@divisor,w,c
  2900  0013F8  B4D8               	btfsc	status,2,c
  2901  0013FA  D01C               	goto	l952
  2902  0013FC  0E01               	movlw	1
  2903  0013FE  6E07               	movwf	___lwdiv@counter,c
  2904  001400  D004               	goto	l1183
  2905  001402                     l1181:
  2906  001402  90D8               	bcf	status,0,c
  2907  001404  3603               	rlcf	___lwdiv@divisor,f,c
  2908  001406  3604               	rlcf	___lwdiv@divisor+1,f,c
  2909  001408  2A07               	incf	___lwdiv@counter,f,c
  2910  00140A                     l1183:
  2911  00140A  AE04               	btfss	___lwdiv@divisor+1,7,c
  2912  00140C  D7FA               	goto	l1181
  2913  00140E                     l1185:
  2914  00140E  90D8               	bcf	status,0,c
  2915  001410  3605               	rlcf	___lwdiv@quotient,f,c
  2916  001412  3606               	rlcf	___lwdiv@quotient+1,f,c
  2917  001414  5003               	movf	___lwdiv@divisor,w,c
  2918  001416  5C01               	subwf	___lwdiv@dividend,w,c
  2919  001418  5004               	movf	___lwdiv@divisor+1,w,c
  2920  00141A  5802               	subwfb	___lwdiv@dividend+1,w,c
  2921  00141C  A0D8               	btfss	status,0,c
  2922  00141E  D005               	goto	l1193
  2923  001420  5003               	movf	___lwdiv@divisor,w,c
  2924  001422  5E01               	subwf	___lwdiv@dividend,f,c
  2925  001424  5004               	movf	___lwdiv@divisor+1,w,c
  2926  001426  5A02               	subwfb	___lwdiv@dividend+1,f,c
  2927  001428  8005               	bsf	___lwdiv@quotient,0,c
  2928  00142A                     l1193:
  2929  00142A  90D8               	bcf	status,0,c
  2930  00142C  3204               	rrcf	___lwdiv@divisor+1,f,c
  2931  00142E  3203               	rrcf	___lwdiv@divisor,f,c
  2932  001430  2E07               	decfsz	___lwdiv@counter,f,c
  2933  001432  D7ED               	goto	l1185
  2934  001434                     l952:
  2935  001434  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2936  001438  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2937  00143C  0012               	return	
  2938  00143E                     __end_of___lwdiv:
  2939                           	opt stack 0
  2940                           tblptru	equ	0xFF8
  2941                           tblptrh	equ	0xFF7
  2942                           tblptrl	equ	0xFF6
  2943                           tablat	equ	0xFF5
  2944                           prodh	equ	0xFF4
  2945                           prodl	equ	0xFF3
  2946                           wreg	equ	0xFE8
  2947                           indf2	equ	0xFDF
  2948                           postinc2	equ	0xFDE
  2949                           postdec2	equ	0xFDD
  2950                           fsr2h	equ	0xFDA
  2951                           fsr2l	equ	0xFD9
  2952                           status	equ	0xFD8
  2953                           
  2954 ;; *************** function _configUSART *****************
  2955 ;; Defined at:
  2956 ;;		line 32 in file "PICDS1307.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;		None
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;  spbrg           1    7[COMRAM] unsigned char 
  2961 ;;  config          1    6[COMRAM] unsigned char 
  2962 ;; Return value:  Size  Location     Type
  2963 ;;		None               void
  2964 ;; Registers used:
  2965 ;;		wreg, status,2, cstack
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2971 ;;      Params:         0       0       0       0       0       0       0       0       0
  2972 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2973 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2974 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2975 ;;Total ram usage:        2 bytes
  2976 ;; Hardware stack levels used:    1
  2977 ;; Hardware stack levels required when called:    1
  2978 ;; This function calls:
  2979 ;;		_Open1USART
  2980 ;; This function is called by:
  2981 ;;		_main
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           	psect	text12
  2986  0014E2                     __ptext12:
  2987                           	opt stack 0
  2988  0014E2                     _configUSART:
  2989                           	opt stack 29
  2990                           
  2991                           ;PICDS1307.c: 39: unsigned char config = 0b01111111 & 0b10111111 & 0b11111110 & 0b111111
      +                          01 & 0b11111111;
  2992                           
  2993                           ;incstack = 0
  2994  0014E2  0E3C               	movlw	60
  2995  0014E4  6E07               	movwf	configUSART@config,c
  2996                           
  2997                           ;PICDS1307.c: 40: unsigned char spbrg = 51;
  2998  0014E6  0E33               	movlw	51
  2999  0014E8  6E08               	movwf	configUSART@spbrg,c
  3000                           
  3001                           ;PICDS1307.c: 41: Open1USART(config, spbrg);
  3002  0014EA  C008  F001         	movff	configUSART@spbrg,Open1USART@spbrg
  3003  0014EE  6A02               	clrf	Open1USART@spbrg+1,c
  3004  0014F0  5007               	movf	configUSART@config,w,c
  3005  0014F2  ECCA  F009         	call	_Open1USART
  3006  0014F6  0012               	return	
  3007  0014F8                     __end_of_configUSART:
  3008                           	opt stack 0
  3009                           tblptru	equ	0xFF8
  3010                           tblptrh	equ	0xFF7
  3011                           tblptrl	equ	0xFF6
  3012                           tablat	equ	0xFF5
  3013                           prodh	equ	0xFF4
  3014                           prodl	equ	0xFF3
  3015                           wreg	equ	0xFE8
  3016                           indf2	equ	0xFDF
  3017                           postinc2	equ	0xFDE
  3018                           postdec2	equ	0xFDD
  3019                           fsr2h	equ	0xFDA
  3020                           fsr2l	equ	0xFD9
  3021                           status	equ	0xFD8
  3022                           
  3023 ;; *************** function _Open1USART *****************
  3024 ;; Defined at:
  3025 ;;		line 124 in file "C:\PROGRAM FILES (X86)\MICROCHIP\XC8\V1.33\sources\pic18\plib\USART\u1open.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;  config          1    wreg     unsigned char 
  3028 ;;  spbrg           2    0[COMRAM] unsigned int 
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;  config          1    5[COMRAM] unsigned char 
  3031 ;; Return value:  Size  Location     Type
  3032 ;;		None               void
  3033 ;; Registers used:
  3034 ;;		wreg, status,2
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3040 ;;      Params:         2       0       0       0       0       0       0       0       0
  3041 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3042 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3043 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3044 ;;Total ram usage:        6 bytes
  3045 ;; Hardware stack levels used:    1
  3046 ;; This function calls:
  3047 ;;		Nothing
  3048 ;; This function is called by:
  3049 ;;		_configUSART
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053                           	psect	text13
  3054  001394                     __ptext13:
  3055                           	opt stack 0
  3056  001394                     _Open1USART:
  3057                           	opt stack 29
  3058                           
  3059                           ;incstack = 0
  3060                           ;Open1USART@config stored from wreg
  3061  001394  6E06               	movwf	Open1USART@config,c
  3062  001396  0E00               	movlw	0
  3063  001398  6EAC               	movwf	4012,c	;volatile
  3064  00139A  0E00               	movlw	0
  3065  00139C  6EAB               	movwf	4011,c	;volatile
  3066  00139E  B006               	btfsc	Open1USART@config,0,c
  3067  0013A0  88AC               	bsf	4012,4,c	;volatile
  3068  0013A2  A206               	btfss	Open1USART@config,1,c
  3069  0013A4  D002               	goto	l1041
  3070  0013A6  8CAC               	bsf	4012,6,c	;volatile
  3071  0013A8  8CAB               	bsf	4011,6,c	;volatile
  3072  0013AA                     l1041:
  3073  0013AA  B406               	btfsc	Open1USART@config,2,c
  3074  0013AC  8EAC               	bsf	4012,7,c	;volatile
  3075  0013AE  A606               	btfss	Open1USART@config,3,c
  3076  0013B0  D002               	goto	l350
  3077  0013B2  88AB               	bsf	4011,4,c	;volatile
  3078  0013B4  D001               	goto	l1049
  3079  0013B6                     l350:
  3080  0013B6  8AAB               	bsf	4011,5,c	;volatile
  3081  0013B8                     l1049:
  3082  0013B8  B806               	btfsc	Open1USART@config,4,c
  3083  0013BA  84AC               	bsf	4012,2,c	;volatile
  3084  0013BC  BA06               	btfsc	Open1USART@config,5,c
  3085  0013BE  86AB               	bsf	4011,3,c	;volatile
  3086  0013C0  AC06               	btfss	Open1USART@config,6,c
  3087  0013C2  D002               	goto	l354
  3088  0013C4  8A9D               	bsf	3997,5,c	;volatile
  3089  0013C6  D001               	goto	l1061
  3090  0013C8                     l354:
  3091  0013C8  9A9D               	bcf	3997,5,c	;volatile
  3092  0013CA                     l1061:
  3093  0013CA  AE06               	btfss	Open1USART@config,7,c
  3094  0013CC  D002               	goto	l356
  3095  0013CE  889D               	bsf	3997,4,c	;volatile
  3096  0013D0  D001               	goto	l357
  3097  0013D2                     l356:
  3098  0013D2  989D               	bcf	3997,4,c	;volatile
  3099  0013D4                     l357:
  3100  0013D4  C001  FFAF         	movff	Open1USART@spbrg,4015	;volatile
  3101  0013D8  C002  F003         	movff	Open1USART@spbrg+1,??_Open1USART
  3102  0013DC  C003  F004         	movff	??_Open1USART,??_Open1USART+1
  3103  0013E0  6A05               	clrf	(??_Open1USART+2)& (0+255),c
  3104  0013E2  5004               	movf	??_Open1USART+1,w,c
  3105  0013E4  6EB0               	movwf	4016,c	;volatile
  3106  0013E6  8AAC               	bsf	4012,5,c	;volatile
  3107  0013E8  8EAB               	bsf	4011,7,c	;volatile
  3108  0013EA  0012               	return	
  3109  0013EC                     __end_of_Open1USART:
  3110                           	opt stack 0
  3111                           tblptru	equ	0xFF8
  3112                           tblptrh	equ	0xFF7
  3113                           tblptrl	equ	0xFF6
  3114                           tablat	equ	0xFF5
  3115                           prodh	equ	0xFF4
  3116                           prodl	equ	0xFF3
  3117                           wreg	equ	0xFE8
  3118                           indf2	equ	0xFDF
  3119                           postinc2	equ	0xFDE
  3120                           postdec2	equ	0xFDD
  3121                           fsr2h	equ	0xFDA
  3122                           fsr2l	equ	0xFD9
  3123                           status	equ	0xFD8
  3124                           
  3125 ;; *************** function _configOscillator *****************
  3126 ;; Defined at:
  3127 ;;		line 17 in file "PICDS1307.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;		None
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;		None
  3132 ;; Return value:  Size  Location     Type
  3133 ;;		None               void
  3134 ;; Registers used:
  3135 ;;		wreg, status,2
  3136 ;; Tracked objects:
  3137 ;;		On entry : 0/0
  3138 ;;		On exit  : 0/0
  3139 ;;		Unchanged: 0/0
  3140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3141 ;;      Params:         0       0       0       0       0       0       0       0       0
  3142 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3143 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3144 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3145 ;;Total ram usage:        0 bytes
  3146 ;; Hardware stack levels used:    1
  3147 ;; This function calls:
  3148 ;;		Nothing
  3149 ;; This function is called by:
  3150 ;;		_main
  3151 ;; This function uses a non-reentrant model
  3152 ;;
  3153                           
  3154                           	psect	text14
  3155  001534                     __ptext14:
  3156                           	opt stack 0
  3157  001534                     _configOscillator:
  3158                           	opt stack 30
  3159                           
  3160                           ;PICDS1307.c: 29: OSCCON = 0x66;
  3161                           
  3162                           ;incstack = 0
  3163  001534  0E66               	movlw	102
  3164  001536  6ED3               	movwf	4051,c	;volatile
  3165  001538  0012               	return	
  3166  00153A                     __end_of_configOscillator:
  3167                           	opt stack 0
  3168                           tblptru	equ	0xFF8
  3169                           tblptrh	equ	0xFF7
  3170                           tblptrl	equ	0xFF6
  3171                           tablat	equ	0xFF5
  3172                           prodh	equ	0xFF4
  3173                           prodl	equ	0xFF3
  3174                           wreg	equ	0xFE8
  3175                           indf2	equ	0xFDF
  3176                           postinc2	equ	0xFDE
  3177                           postdec2	equ	0xFDD
  3178                           fsr2h	equ	0xFDA
  3179                           fsr2l	equ	0xFD9
  3180                           status	equ	0xFD8
  3181                           
  3182 ;; *************** function _configDS1307 *****************
  3183 ;; Defined at:
  3184 ;;		line 44 in file "PICDS1307.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;		None
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;		None
  3189 ;; Return value:  Size  Location     Type
  3190 ;;		None               void
  3191 ;; Registers used:
  3192 ;;		wreg, status,2, status,0, cstack
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3198 ;;      Params:         0       0       0       0       0       0       0       0       0
  3199 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3200 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3201 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3202 ;;Total ram usage:        0 bytes
  3203 ;; Hardware stack levels used:    1
  3204 ;; Hardware stack levels required when called:    1
  3205 ;; This function calls:
  3206 ;;		_OpenI2C1
  3207 ;; This function is called by:
  3208 ;;		_main
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212                           	psect	text15
  3213  00150A                     __ptext15:
  3214                           	opt stack 0
  3215  00150A                     _configDS1307:
  3216                           	opt stack 29
  3217                           
  3218                           ;PICDS1307.c: 46: OpenI2C1(0b00001000, 0b10000000);
  3219                           
  3220                           ;incstack = 0
  3221  00150A  0E80               	movlw	128
  3222  00150C  6E01               	movwf	OpenI2C1@slew,c
  3223  00150E  0E08               	movlw	8
  3224  001510  EC64  F00A         	call	_OpenI2C1
  3225                           
  3226                           ;PICDS1307.c: 47: SSP1ADD = 19;
  3227  001514  0E13               	movlw	19
  3228  001516  6EC8               	movwf	4040,c	;volatile
  3229  001518  0012               	return	
  3230  00151A                     __end_of_configDS1307:
  3231                           	opt stack 0
  3232                           tblptru	equ	0xFF8
  3233                           tblptrh	equ	0xFF7
  3234                           tblptrl	equ	0xFF6
  3235                           tablat	equ	0xFF5
  3236                           prodh	equ	0xFF4
  3237                           prodl	equ	0xFF3
  3238                           wreg	equ	0xFE8
  3239                           indf2	equ	0xFDF
  3240                           postinc2	equ	0xFDE
  3241                           postdec2	equ	0xFDD
  3242                           fsr2h	equ	0xFDA
  3243                           fsr2l	equ	0xFD9
  3244                           status	equ	0xFD8
  3245                           
  3246 ;; *************** function _OpenI2C1 *****************
  3247 ;; Defined at:
  3248 ;;		line 29 in file "C:\PROGRAM FILES (X86)\MICROCHIP\XC8\V1.33\sources\pic18\plib\i2c\i2c1open.c"
  3249 ;; Parameters:    Size  Location     Type
  3250 ;;  sync_mode       1    wreg     unsigned char 
  3251 ;;  slew            1    0[COMRAM] unsigned char 
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;  sync_mode       1    1[COMRAM] unsigned char 
  3254 ;; Return value:  Size  Location     Type
  3255 ;;		None               void
  3256 ;; Registers used:
  3257 ;;		wreg, status,2, status,0
  3258 ;; Tracked objects:
  3259 ;;		On entry : 0/0
  3260 ;;		On exit  : 0/0
  3261 ;;		Unchanged: 0/0
  3262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3263 ;;      Params:         1       0       0       0       0       0       0       0       0
  3264 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3265 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3266 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3267 ;;Total ram usage:        2 bytes
  3268 ;; Hardware stack levels used:    1
  3269 ;; This function calls:
  3270 ;;		Nothing
  3271 ;; This function is called by:
  3272 ;;		_configDS1307
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276                           	psect	text16
  3277  0014C8                     __ptext16:
  3278                           	opt stack 0
  3279  0014C8                     _OpenI2C1:
  3280                           	opt stack 29
  3281                           
  3282                           ;incstack = 0
  3283                           ;OpenI2C1@sync_mode stored from wreg
  3284  0014C8  6E02               	movwf	OpenI2C1@sync_mode,c
  3285  0014CA  0E3F               	movlw	63
  3286  0014CC  16C7               	andwf	4039,f,c	;volatile
  3287  0014CE  0E00               	movlw	0
  3288  0014D0  6EC6               	movwf	4038,c	;volatile
  3289  0014D2  0E00               	movlw	0
  3290  0014D4  6EC5               	movwf	4037,c	;volatile
  3291  0014D6  5002               	movf	OpenI2C1@sync_mode,w,c
  3292  0014D8  12C6               	iorwf	4038,f,c	;volatile
  3293  0014DA  5001               	movf	OpenI2C1@slew,w,c
  3294  0014DC  12C7               	iorwf	4039,f,c	;volatile
  3295  0014DE  8AC6               	bsf	4038,5,c	;volatile
  3296  0014E0  0012               	return	
  3297  0014E2                     __end_of_OpenI2C1:
  3298                           	opt stack 0
  3299                           tblptru	equ	0xFF8
  3300                           tblptrh	equ	0xFF7
  3301                           tblptrl	equ	0xFF6
  3302                           tablat	equ	0xFF5
  3303                           prodh	equ	0xFF4
  3304                           prodl	equ	0xFF3
  3305                           wreg	equ	0xFE8
  3306                           indf2	equ	0xFDF
  3307                           postinc2	equ	0xFDE
  3308                           postdec2	equ	0xFDD
  3309                           fsr2h	equ	0xFDA
  3310                           fsr2l	equ	0xFD9
  3311                           status	equ	0xFD8
  3312                           tblptru	equ	0xFF8
  3313                           tblptrh	equ	0xFF7
  3314                           tblptrl	equ	0xFF6
  3315                           tablat	equ	0xFF5
  3316                           prodh	equ	0xFF4
  3317                           prodl	equ	0xFF3
  3318                           wreg	equ	0xFE8
  3319                           indf2	equ	0xFDF
  3320                           postinc2	equ	0xFDE
  3321                           postdec2	equ	0xFDD
  3322                           fsr2h	equ	0xFDA
  3323                           fsr2l	equ	0xFD9
  3324                           status	equ	0xFD8
  3325                           
  3326                           	psect	rparam
  3327  0000                     tblptru	equ	0xFF8
  3328                           tblptrh	equ	0xFF7
  3329                           tblptrl	equ	0xFF6
  3330                           tablat	equ	0xFF5
  3331                           prodh	equ	0xFF4
  3332                           prodl	equ	0xFF3
  3333                           wreg	equ	0xFE8
  3334                           indf2	equ	0xFDF
  3335                           postinc2	equ	0xFDE
  3336                           postdec2	equ	0xFDD
  3337                           fsr2h	equ	0xFDA
  3338                           fsr2l	equ	0xFD9
  3339                           status	equ	0xFD8


Data Sizes:
    Strings     59
    Constant    10
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     62      63
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_2(CODE[30]), STR_1(CODE[29]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    S626$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    rtc_get_time@year	PTR unsigned char  size(2) Largest target is 1
		 -> main@year(COMRAM[1]), 

    rtc_get_time@month	PTR unsigned char  size(2) Largest target is 1
		 -> main@month(COMRAM[1]), 

    rtc_get_time@date	PTR unsigned char  size(2) Largest target is 1
		 -> main@date(COMRAM[1]), 

    rtc_get_time@day	PTR unsigned char  size(2) Largest target is 1
		 -> main@day(COMRAM[1]), 

    rtc_get_time@hours	PTR unsigned char  size(2) Largest target is 1
		 -> main@hour(COMRAM[1]), 

    rtc_get_time@minutes	PTR unsigned char  size(2) Largest target is 1
		 -> main@min(COMRAM[1]), 

    rtc_get_time@seconds	PTR unsigned char  size(2) Largest target is 1
		 -> main@sec(COMRAM[1]), 

    rtc_set_time@year	PTR unsigned char  size(2) Largest target is 1
		 -> main@year(COMRAM[1]), 

    rtc_set_time@month	PTR unsigned char  size(2) Largest target is 1
		 -> main@month(COMRAM[1]), 

    rtc_set_time@date	PTR unsigned char  size(2) Largest target is 1
		 -> main@date(COMRAM[1]), 

    rtc_set_time@day	PTR unsigned char  size(2) Largest target is 1
		 -> main@day(COMRAM[1]), 

    rtc_set_time@hours	PTR unsigned char  size(2) Largest target is 1
		 -> main@hour(COMRAM[1]), 

    rtc_set_time@minutes	PTR unsigned char  size(2) Largest target is 1
		 -> main@min(COMRAM[1]), 

    rtc_set_time@seconds	PTR unsigned char  size(2) Largest target is 1
		 -> main@sec(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _rtc_set_time->___awdiv
    _rtc_get_time->_WriteI2C1
    _printf->_rtc_set_time
    _putch->_Write1USART
    ___lwmod->___lwdiv
    _configUSART->_Open1USART
    _configDS1307->_OpenI2C1

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    4301
                                             52 COMRAM    10    10      0
                       _configDS1307
                   _configOscillator
                        _configUSART
                             _printf
                       _rtc_get_time
                       _rtc_set_time
 ---------------------------------------------------------------------------------
 (1) _rtc_set_time                                        18     4     14    1520
                                              8 COMRAM    18     4     14
                          _WriteI2C1
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     559
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _rtc_get_time                                        16     2     14     721
                                              2 COMRAM    16     2     14
                           _ReadI2C1
                          _WriteI2C1
 ---------------------------------------------------------------------------------
 (2) _WriteI2C1                                            2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadI2C1                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _printf                                              26    12     14    1221
                                             26 COMRAM    26    12     14
                            ___lwdiv
                            ___lwmod
                            _isdigit
                              _putch
                       _rtc_set_time (ARG)
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      30
                                              1 COMRAM     1     1      0
                        _Write1USART
 ---------------------------------------------------------------------------------
 (3) _Write1USART                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     191
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     191
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _configUSART                                          2     2      0     223
                                              6 COMRAM     2     2      0
                         _Open1USART
 ---------------------------------------------------------------------------------
 (2) _Open1USART                                           6     4      2     193
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _configOscillator                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configDS1307                                         0     0      0      73
                           _OpenI2C1
 ---------------------------------------------------------------------------------
 (2) _OpenI2C1                                             2     1      1      73
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configDS1307
     _OpenI2C1
   _configOscillator
   _configUSART
     _Open1USART
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _isdigit
     _putch
       _Write1USART
     _rtc_set_time (ARG)
       _WriteI2C1
       ___awdiv
   _rtc_get_time
     _ReadI2C1
     _WriteI2C1
   _rtc_set_time
     _WriteI2C1
     ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3E      3F       1       66.3%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3F       6        0.0%
DATA                 0      0      3F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Jan 13 11:44:32 2015

                       l32 1522                         l62 0866                         l59 0862  
                       l92 09A0                         l84 0928                         l76 08AE  
                       l68 0888               ___awdiv@sign 0006               __CFG_CP0$OFF 000000  
             __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000  
                      l100 0A1C                        l201 0D32                        l211 0D78  
                      l220 0DBA                        l140 0C30                        l133 0C0A  
                      l125 0B92                        l117 0B1A                        l109 0AA2  
                      l150 0C56                        l208 0D74                        l160 0C7C  
                      l217 0DB6                        l226 0DF8                        l235 0E30  
                      l171 0CA2                        l147 0C52                        l244 0E72  
                      l253 0EB4                        l229 0DFC                        l157 0C78  
                      l350 13B6                        l238 0E34                        l247 0E76  
                      l416 1348                        l256 0EB8                        l192 0D0C  
                      l168 0C9E                        l425 1374                        l265 0F0C  
                      l185 0CEA                        l177 0CC4                        l354 13C8  
                      l274 0F2E                        l195 0D10                        l356 13D2  
                      l284 0FA6                        l268 0F10                        l357 13D4  
                      l277 0F32                        l391 149E                        l287 0FAA  
                      l392 14A0                        l952 1434                        l962 1476  
             __CFG_CPB$OFF 000000                        u200 1382                        u208 1384  
                      u430 0874                        u520 0914               __CFG_CPD$OFF 000000  
                      u620 0A08                        u470 089A                        u438 0876  
                      u390 0852                        u528 0916                        u730 0B06  
                      u570 098C                        u628 0A0A                        u910 0C42  
                      u830 0BF6                        u478 089C                        u398 0854  
                      u680 0A8E             ??_configDS1307 0003                        u738 0B08  
                      u578 098E                        u780 0B7E                        u950 0C68  
                      u918 0C44                        u870 0C1C                        u838 0BF8  
                      u688 0A90                        u788 0B80                        u958 0C6A  
                      u878 0C1E                        wreg 000FE8                 _TXSTA1bits 000FAC  
             __CFG_LVP$OFF 000000                       l1101 1354                       l1041 13AA  
                     l1201 144C                       l1105 1378                       l1203 1454  
                     l1061 13CA                       l1205 1458                       l1029 1504  
                     l1151 12D2                       l1311 0AFC                       l1049 13B8  
                     l1209 146C                       l1153 12DA                       l1145 12BC  
                     l1321 0B32                       l1233 0890                       l1225 0848  
                     l1171 1312                       l1163 12FA                       l1155 12DE  
                     l1139 129C                       l1307 0ABA                       l1243 08C6  
                     l1227 086A                       l1181 1402                       l1325 0B74  
                     l1183 140A                       l1503 0E38                       l1167 1304  
                     l1351 0C38                       l1335 0BAA                       l1263 0982  
                     l1193 142A                       l1185 140E                       l1513 0E7A  
                     l1441 0C84                       l1345 0C12                       l1273 09B8  
                     l1249 090A                       l1531 0F14                       l1523 0EBC  
                     l1443 0CA6                       l1339 0BEC                       l1259 0940  
                     l1533 0F38                       l1357 0C5E                       l1615 108C  
                     l1535 0F8C                       l1463 0D3A                       l1455 0CF2  
                     l1279 09FE                       l1641 1100                       l1633 10DA  
                     l1609 1080                       l1529 0EF0                       l1473 0D7C  
                     l1457 0D14                       l1449 0CCC                       l1297 0A84  
                     l1289 0A34                       l1483 0DBE                       l1645 1148  
                     l1637 10EC                       l1629 10C4                       l1493 0E00  
                     l1591 1008                       l1575 0FBA                       l1647 1150  
                     l1569 14C0                       l1593 101E                       l1587 0FEA  
                     l1579 0FCA                       l1659 11E0                       l1597 1022  
                     l1599 1048                       STR_1 0829                       STR_2 080B  
                     u1210 0CD6                       u1130 0C8E                       u1410 0DC8  
                     u1330 0D44                       u1250 0CFC                       u1218 0CD8  
                     u1170 0CB0                       u1138 0C90                       u1530 0E84  
                     u1450 0E0A                       u1418 0DCA                       u1370 0D86  
                     u1338 0D46                       u1290 0D1E                       u1258 0CFE  
                     u1178 0CB2                       u1630 0F1E                       u1570 0EC6  
                     u1538 0E86                       u1490 0E42                       u1458 0E0C  
                     u1378 0D88                       u1298 0D20                       u1670 0F96  
                     u1638 0F20                       u1590 0EFA                       u1578 0EC8  
                     u1498 0E44                       u1917 126A                       u1678 0F98  
                     u1598 0EFC            rtc_get_time@day 0009                       _main 1168  
                     fsr2h 000FDA                       indf2 000FDF                       fsr2l 000FD9  
            __CFG_BORV$190 000000                       prodh 000FF4                       prodl 000FF3  
                     start 0000              __CFG_IESO$OFF 000000              __CFG_MCLRE$ON 000000  
                    ?_main 0001            __end_of___awdiv 131C            ___awdiv@divisor 0003  
          __end_of___lwdiv 143E            __end_of___lwmod 1480              __CFG_WDTEN$ON 000000  
          ___awdiv@counter 0005              __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000  
            __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000             __CFG_EBTR0$OFF 000000  
           __CFG_FCMEN$OFF 000000             __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000  
           __CFG_EBTR3$OFF 000000  __size_of_configOscillator 0006              __CFG_WRTB$OFF 000000  
            __CFG_WRTC$OFF 000000              __CFG_WRTD$OFF 000000             __CFG_EBTRB$OFF 000000  
         rtc_get_time@date 000B            __end_of_dpowers 080B           rtc_get_time@temp 0012  
         rtc_get_time@year 000F            __end_of_isdigit 14C8                      _putch 151A  
                    tablat 000FF5                      status 000FD8             __CFG_T3CMX$RC0 000000  
           __CFG_ICPRT$OFF 000000            __initialization 1528               __end_of_main 1278  
         __end_of_ReadI2C1 14A8             __CFG_PCLKEN$ON 000000           __end_of_OpenI2C1 14E2  
               _Open1USART 1394                     ??_main 0035              __activetblptr 000002  
           __CFG_SDOMX$RB3 000000            __CFG_CCP2MX$RC1 000000           ___awdiv@dividend 0001  
                   ?_putch 0001                     _RCSTA1 000FAB                     _OSCCON 000FD3  
                   _SPBRG1 000FAF                     _TXREG1 000FAD                     _TXSTA1 000FAC  
     __end_of_configDS1307 151A       __size_of_configUSART 0016             __CFG_XINST$OFF 000000  
                ??___awdiv 0005             __CFG_STVREN$ON 000000                  ??___lwdiv 0005  
                ??___lwmod 000C          rtc_get_time@hours 0007          rtc_get_time@month 000D  
         ___awdiv@quotient 0007                     _printf 0FB0                  ??_isdigit 0001  
             __mediumconst 0000                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8       __CFG_LS48MHZ$SYS24X4 000000         __size_of_WriteI2C1 0078  
               __accesstop 0060    __end_of__initialization 152A            __CFG_PBADEN$OFF 000000  
           __pcstackCOMRAM 0001           __CFG_nPWRTEN$OFF 000000              __end_of_putch 1528  
              ?_Open1USART 0001           _configOscillator 1534                    ??_putch 0002  
                ?_ReadI2C1 0001              ??_Write1USART 0001                  ?_OpenI2C1 0001  
        __CFG_PLLSEL$PLL4X 000000               OpenI2C1@slew 0001        rtc_set_time@minutes 000B  
      rtc_set_time@seconds 0009          __end_of_WriteI2C1 1394                    ?_printf 001B  
         configUSART@spbrg 0008           Open1USART@config 0006                    _SPBRGH1 000FB0  
                  _SSP1ADD 000FC8                    _SSP1BUF 000FC9                 ??_ReadI2C1 0001  
    __size_of_configDS1307 0010                 ??_OpenI2C1 0002        __size_of_Open1USART 0058  
                  __Hparam 0000                    __Lparam 0000        __end_of_Write1USART 150A  
                  ___awdiv 1278                    ___lwdiv 13EC                    ___lwmod 143E  
             __psmallconst 0800                    __pcinit 1528                    __ramtop 0800  
                  __ptext0 1168                    __ptext1 0848                    __ptext2 1278  
                  __ptext3 0C84                    __ptext4 131C                    __ptext5 1480  
                  __ptext6 0FB0                    __ptext7 151A                    __ptext8 14F8  
                  __ptext9 14A8            __size_of_printf 01B8                    _dpowers 0801  
                  _isdigit 14A8               _configDS1307 150A                    main@day 0038  
                  main@min 003A                    main@sec 0039       end_of_initialization 152A  
            __Lmediumconst 0000            rtc_set_time@day 000F              ?_rtc_get_time 0003  
                  printf@c 0034                    printf@f 001B                    postdec2 000FDD  
                  postinc2 000FDE              ?_rtc_set_time 0009              ??_configUSART 0007  
              _Write1USART 14F8             ??_rtc_get_time 0011   __end_of_configOscillator 153A  
             ??_Open1USART 0003             ??_rtc_set_time 0017             __end_of_printf 1168  
      start_initialization 1528            __CFG_nLPBOR$OFF 000000          __size_of_ReadI2C1 0028  
       __end_of_Open1USART 13EC          __size_of_OpenI2C1 001A        __end_of_configUSART 14F8  
                 ??_printf 0029                __pbssCOMRAM 003F                  _WriteI2C1 131C  
      __end_of__stringdata 0846               _isdigit$1735 0002           ___lwdiv@dividend 0001  
                 ?___awdiv 0001                   ?___lwdiv 0001                   ?___lwmod 0008  
          Open1USART@spbrg 0001                __smallconst 0800                   ?_isdigit 0001  
               ?_WriteI2C1 0001          configUSART@config 0007       __end_of_rtc_get_time 0FB0  
         ___lwdiv@quotient 0005            Write1USART@data 0001             __size_of_putch 000E  
              _configUSART 14E2                   _PIE1bits 000F9D       __end_of_rtc_set_time 0C84  
                 _PIR1bits 000F9E           __CFG_WDTPS$32768 000000                   _SSP1CON1 000FC6  
                 _SSP1CON2 000FC5                   _SSP1STAT 000FC7                __stringdata 080B  
               printf@_val 002E                 printf@flag 002D                  main@delay 0036  
               printf@prec 0033                  main@month 003D          __CFG_CFGPLLEN$OFF 000000  
                 _ReadI2C1 1480               ?_Write1USART 0001                   _OpenI2C1 14C8  
                 __Hrparam 0000                   __Lrparam 0000         __CFG_BOREN$SBORDIS 000000  
        ?_configOscillator 0001           __size_of___awdiv 00A4         ??_configOscillator 0001  
         __size_of___lwdiv 0052           __size_of___lwmod 0042                ??_WriteI2C1 0001  
         __size_of_isdigit 0020            ___lwdiv@divisor 0003            ___lwdiv@counter 0007  
        rtc_set_time@hours 000D          rtc_set_time@temp1 001A          rtc_set_time@month 0013  
                 __ptext10 143E                   __ptext11 13EC                   __ptext12 14E2  
                 __ptext13 1394                   __ptext14 1534                   __ptext15 150A  
                 __ptext16 14C8               _SSP1CON1bits 000FC6               _SSP1CON2bits 000FC5  
      rtc_get_time@minutes 0005        rtc_get_time@seconds 0003              __size_of_main 0110  
        WriteI2C1@data_out 0002                   main@date 003C               _SSP1STATbits 000FC7  
                 main@hour 003B                   main@year 003E          OpenI2C1@sync_mode 0002  
    __size_of_rtc_get_time 032C              _USART1_Status 003F                  putch@data 0002  
                 isdigit@c 0003      __size_of_rtc_set_time 043C           rtc_set_time@date 0011  
         ___lwmod@dividend 0008           rtc_set_time@temp 0019           rtc_set_time@year 0015  
               _RCSTA1bits 000FAB               _rtc_get_time 0C84                   printf@ap 002B  
     __CFG_CPUDIV$NOCLKDIV 000000              ?_configDS1307 0001            ___lwmod@divisor 000A  
             _rtc_set_time 0848            ___lwmod@counter 000C         __CFG_FOSC$INTOSCIO 000000  
             ?_configUSART 0001       __size_of_Write1USART 0012  
